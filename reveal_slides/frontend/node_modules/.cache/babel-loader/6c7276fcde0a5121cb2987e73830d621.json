{"ast":null,"code":"import _toConsumableArray from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _possibleConstructorReturn from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _assertThisInitialized from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from './schema';\nimport { Vector } from './vector';\nimport { Chunked } from './vector/chunked';\nexport var Column = /*#__PURE__*/function (_Chunked) {\n  _inherits(Column, _Chunked);\n  var _super = _createSuper(Column);\n  function Column(field) {\n    var _this;\n    var vectors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var offsets = arguments.length > 2 ? arguments[2] : undefined;\n    _classCallCheck(this, Column);\n    vectors = Chunked.flatten.apply(Chunked, _toConsumableArray(vectors));\n    _this = _super.call(this, field.type, vectors, offsets);\n    _this._field = field;\n    if (vectors.length === 1 && !(_assertThisInitialized(_this) instanceof SingleChunkColumn)) {\n      return _possibleConstructorReturn(_this, new SingleChunkColumn(field, vectors[0], _this._chunkOffsets));\n    }\n    return _this;\n  }\n  /** @nocollapse */\n  _createClass(Column, [{\n    key: \"field\",\n    get: function get() {\n      return this._field;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._field.name;\n    }\n  }, {\n    key: \"nullable\",\n    get: function get() {\n      return this._field.nullable;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._field.metadata;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var chunks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._chunks;\n      return new Column(this._field, chunks);\n    }\n  }, {\n    key: \"getChildAt\",\n    value: function getChildAt(index) {\n      if (index < 0 || index >= this.numChildren) {\n        return null;\n      }\n      var columns = this._children || (this._children = []);\n      var column, field, chunks;\n      if (column = columns[index]) {\n        return column;\n      }\n      if (field = (this.type.children || [])[index]) {\n        chunks = this._chunks.map(function (vector) {\n          return vector.getChildAt(index);\n        }).filter(function (vec) {\n          return vec != null;\n        });\n        if (chunks.length > 0) {\n          return columns[index] = new Column(field, chunks);\n        }\n      }\n      return null;\n    }\n  }], [{\n    key: \"new\",\n    value: function _new(field, data) {\n      for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        rest[_key - 2] = arguments[_key];\n      }\n      var chunks = Chunked.flatten(Array.isArray(data) ? [].concat(_toConsumableArray(data), rest) : data instanceof Vector ? [data].concat(rest) : [Vector.new.apply(Vector, [data].concat(rest))]);\n      if (typeof field === 'string') {\n        var type = chunks[0].data.type;\n        field = new Field(field, type, true);\n      } else if (!field.nullable && chunks.some(function (_ref) {\n        var nullCount = _ref.nullCount;\n        return nullCount > 0;\n      })) {\n        field = field.clone({\n          nullable: true\n        });\n      }\n      return new Column(field, chunks);\n    }\n  }]);\n  return Column;\n}(Chunked);\n/** @ignore */\nvar SingleChunkColumn = /*#__PURE__*/function (_Column) {\n  _inherits(SingleChunkColumn, _Column);\n  var _super2 = _createSuper(SingleChunkColumn);\n  function SingleChunkColumn(field, vector, offsets) {\n    var _this2;\n    _classCallCheck(this, SingleChunkColumn);\n    _this2 = _super2.call(this, field, [vector], offsets);\n    _this2._chunk = vector;\n    return _this2;\n  }\n  _createClass(SingleChunkColumn, [{\n    key: \"search\",\n    value: function search(index, then) {\n      return then ? then(this, 0, index) : [0, index];\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(index) {\n      return this._chunk.isValid(index);\n    }\n  }, {\n    key: \"get\",\n    value: function get(index) {\n      return this._chunk.get(index);\n    }\n  }, {\n    key: \"set\",\n    value: function set(index, value) {\n      this._chunk.set(index, value);\n    }\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(element, offset) {\n      return this._chunk.indexOf(element, offset);\n    }\n  }]);\n  return SingleChunkColumn;\n}(Column);","map":{"version":3,"names":["Field","Vector","Chunked","Column","_Chunked","_inherits","_super","_createSuper","field","_this","vectors","arguments","length","undefined","offsets","_classCallCheck","flatten","apply","_toConsumableArray","call","type","_field","_assertThisInitialized","SingleChunkColumn","_possibleConstructorReturn","_chunkOffsets","_createClass","key","get","name","nullable","metadata","value","clone","chunks","_chunks","getChildAt","index","numChildren","columns","_children","column","children","map","vector","filter","vec","_new","data","_len","rest","Array","_key","isArray","concat","new","some","_ref","nullCount","_Column","_super2","_this2","_chunk","search","then","isValid","set","indexOf","element","offset"],"sources":["column.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}