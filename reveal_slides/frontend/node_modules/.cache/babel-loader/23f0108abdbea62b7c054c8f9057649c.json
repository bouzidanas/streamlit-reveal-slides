{"ast":null,"code":"import _regeneratorRuntime from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _construct from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _asyncIterator from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nvar _excluded = [\"values\"];\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\nimport * as fn from '../util/fn';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder } from '../builder';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n/** @nocollapse */\nVector.new = newVector;\n/** @nocollapse */\nVector.from = vectorFrom;\n/** @ignore */\nfunction newVector(data) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  return _construct(getVectorConstructor.getVisitFn(data)(), [data].concat(args));\n}\n/** @ignore */\nexport function vectorFromValuesWithType(newDataType, input) {\n  if (isIterable(input)) {\n    return Vector.from({\n      'nullValues': [null, undefined],\n      type: newDataType(),\n      'values': input\n    });\n  } else if (isAsyncIterable(input)) {\n    return Vector.from({\n      'nullValues': [null, undefined],\n      type: newDataType(),\n      'values': input\n    });\n  }\n  var _input = _objectSpread({}, input),\n    _input$values = _input['values'],\n    values = _input$values === void 0 ? [] : _input$values,\n    _input$type = _input['type'],\n    type = _input$type === void 0 ? newDataType() : _input$type,\n    _input$nullValues = _input['nullValues'],\n    nullValues = _input$nullValues === void 0 ? [null, undefined] : _input$nullValues;\n  return isIterable(values) ? Vector.from(_objectSpread(_objectSpread({\n    nullValues: nullValues\n  }, input), {}, {\n    type: type\n  })) : Vector.from(_objectSpread(_objectSpread({\n    nullValues: nullValues\n  }, input), {}, {\n    type: type\n  }));\n}\nfunction vectorFrom(input) {\n  var _nullValues$input = _objectSpread({\n      'nullValues': [null, undefined]\n    }, input),\n    _nullValues$input$val = _nullValues$input['values'],\n    values = _nullValues$input$val === void 0 ? [] : _nullValues$input$val,\n    options = _objectWithoutProperties(_nullValues$input, _excluded);\n  if (isIterable(values)) {\n    var chunks = _toConsumableArray(Builder.throughIterable(options)(values));\n    return chunks.length === 1 ? chunks[0] : Chunked.concat(chunks);\n  }\n  return function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(chunks) {\n      var transform, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            transform = Builder.throughAsyncIterable(options);\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 3;\n            _iterator = _asyncIterator(transform(values));\n          case 5:\n            _context.next = 7;\n            return _iterator.next();\n          case 7:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 13;\n              break;\n            }\n            chunk = _step.value;\n            chunks.push(chunk);\n          case 10:\n            _iteratorAbruptCompletion = false;\n            _context.next = 5;\n            break;\n          case 13:\n            _context.next = 19;\n            break;\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n          case 19:\n            _context.prev = 19;\n            _context.prev = 20;\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 24;\n              break;\n            }\n            _context.next = 24;\n            return _iterator.return();\n          case 24:\n            _context.prev = 24;\n            if (!_didIteratorError) {\n              _context.next = 27;\n              break;\n            }\n            throw _iteratorError;\n          case 27:\n            return _context.finish(24);\n          case 28:\n            return _context.finish(19);\n          case 29:\n            return _context.abrupt(\"return\", chunks.length === 1 ? chunks[0] : Chunked.concat(chunks));\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[3, 15, 19, 29], [20,, 24, 28]]);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()([]);\n}\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\nBaseVector.prototype.get = function baseVectorGet(index) {\n  return getVisitor.visit(this, index);\n};\nBaseVector.prototype.set = function baseVectorSet(index, value) {\n  return setVisitor.visit(this, index, value);\n};\nBaseVector.prototype.indexOf = function baseVectorIndexOf(value, fromIndex) {\n  return indexOfVisitor.visit(this, value, fromIndex);\n};\nBaseVector.prototype.toArray = function baseVectorToArray() {\n  return toArrayVisitor.visit(this);\n};\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth() {\n  return byteWidthVisitor.visit(this.type);\n};\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator() {\n  return iteratorVisitor.visit(this);\n};\nBaseVector.prototype._bindDataAccessors = bindBaseVectorDataAccessors;\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\nObject.keys(Type).map(function (T) {\n  return Type[T];\n}).filter(function (T) {\n  return typeof T === 'number';\n}).filter(function (typeId) {\n  return typeId !== Type.NONE;\n}).forEach(function (typeId) {\n  var VectorCtor = getVectorConstructor.visit(typeId);\n  VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n  VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n  VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n  VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n  VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n  VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n});\n/** @ignore */\nfunction partialType0(visit) {\n  return function () {\n    return visit(this.type);\n  };\n}\n/** @ignore */\nfunction wrapNullableGet(fn) {\n  return function (i) {\n    return this.isValid(i) ? fn.call(this, i) : null;\n  };\n}\n/** @ignore */\nfunction wrapNullableSet(fn) {\n  return function (i, a) {\n    if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n      fn.call(this, i, a);\n    }\n  };\n}\n/** @ignore */\nfunction bindBaseVectorDataAccessors() {\n  var nullBitmap = this.nullBitmap;\n  if (nullBitmap && nullBitmap.byteLength > 0) {\n    this.get = wrapNullableGet(this.get);\n    this.set = wrapNullableSet(this.set);\n  }\n}","map":{"version":3,"names":["Vector","BaseVector","BinaryVector","BoolVector","Chunked","DateVector","DateDayVector","DateMillisecondVector","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","Float16Vector","Float32Vector","Float64Vector","IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","IntVector","Int8Vector","Int16Vector","Int32Vector","Int64Vector","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","ListVector","MapVector","NullVector","StructVector","TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","UnionVector","DenseUnionVector","SparseUnionVector","Utf8Vector","MapRow","StructRow","fn","Type","setBool","isIterable","isAsyncIterable","Builder","instance","getVisitor","setVisitor","indexOfVisitor","toArrayVisitor","iteratorVisitor","byteWidthVisitor","getVectorConstructor","new","newVector","from","vectorFrom","data","_len","arguments","length","args","Array","_key","_construct","getVisitFn","concat","vectorFromValuesWithType","newDataType","input","undefined","type","_input","_objectSpread","_input$values","values","_input$type","_input$nullValues","nullValues","_nullValues$input","_nullValues$input$val","options","_objectWithoutProperties","_excluded","chunks","_toConsumableArray","throughIterable","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","transform","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","chunk","wrap","_callee$","_context","prev","next","throughAsyncIterable","_asyncIterator","sent","done","value","push","t0","return","finish","abrupt","stop","_x","apply","prototype","get","baseVectorGet","index","visit","set","baseVectorSet","indexOf","baseVectorIndexOf","fromIndex","toArray","baseVectorToArray","getByteWidth","baseVectorGetByteWidth","Symbol","iterator","baseVectorSymbolIterator","_bindDataAccessors","bindBaseVectorDataAccessors","Object","keys","map","T","filter","typeId","NONE","forEach","VectorCtor","partial1","partial2","partial0","partialType0","wrapNullableGet","i","isValid","call","wrapNullableSet","a","nullBitmap","offset","byteLength"],"sources":["vector/index.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}