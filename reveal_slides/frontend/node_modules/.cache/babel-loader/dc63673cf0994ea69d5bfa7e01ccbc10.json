{"ast":null,"code":"import _classCallCheck from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Dictionary } from '../type';\nimport { Builder } from '../builder';\n/** @ignore */\nexport var DictionaryBuilder = /*#__PURE__*/function (_Builder) {\n  _inherits(DictionaryBuilder, _Builder);\n  var _super = _createSuper(DictionaryBuilder);\n  function DictionaryBuilder(_ref) {\n    var _this;\n    var type = _ref['type'],\n      nulls = _ref['nullValues'],\n      hashFn = _ref['dictionaryHashFunction'];\n    _classCallCheck(this, DictionaryBuilder);\n    _this = _super.call(this, {\n      type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered)\n    });\n    _this._nulls = null;\n    _this._dictionaryOffset = 0;\n    _this._keysToIndices = Object.create(null);\n    _this.indices = Builder.new({\n      'type': _this.type.indices,\n      'nullValues': nulls\n    });\n    _this.dictionary = Builder.new({\n      'type': _this.type.dictionary,\n      'nullValues': null\n    });\n    if (typeof hashFn === 'function') {\n      _this.valueToKey = hashFn;\n    }\n    return _this;\n  }\n  _createClass(DictionaryBuilder, [{\n    key: \"values\",\n    get: function get() {\n      return this.indices.values;\n    }\n  }, {\n    key: \"nullCount\",\n    get: function get() {\n      return this.indices.nullCount;\n    }\n  }, {\n    key: \"nullBitmap\",\n    get: function get() {\n      return this.indices.nullBitmap;\n    }\n  }, {\n    key: \"byteLength\",\n    get: function get() {\n      return this.indices.byteLength + this.dictionary.byteLength;\n    }\n  }, {\n    key: \"reservedLength\",\n    get: function get() {\n      return this.indices.reservedLength + this.dictionary.reservedLength;\n    }\n  }, {\n    key: \"reservedByteLength\",\n    get: function get() {\n      return this.indices.reservedByteLength + this.dictionary.reservedByteLength;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return this.indices.isValid(value);\n    }\n  }, {\n    key: \"setValid\",\n    value: function setValid(index, valid) {\n      var indices = this.indices;\n      valid = indices.setValid(index, valid);\n      this.length = indices.length;\n      return valid;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      var keysToIndices = this._keysToIndices;\n      var key = this.valueToKey(value);\n      var idx = keysToIndices[key];\n      if (idx === undefined) {\n        keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n      }\n      return this.indices.setValue(index, idx);\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      var type = this.type;\n      var prev = this._dictionary;\n      var curr = this.dictionary.toVector();\n      var data = this.indices.flush().clone(type);\n      data.dictionary = prev ? prev.concat(curr) : curr;\n      this.finished || (this._dictionaryOffset += curr.length);\n      this._dictionary = data.dictionary;\n      this.clear();\n      return data;\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      this.indices.finish();\n      this.dictionary.finish();\n      this._dictionaryOffset = 0;\n      this._keysToIndices = Object.create(null);\n      return _get(_getPrototypeOf(DictionaryBuilder.prototype), \"finish\", this).call(this);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.indices.clear();\n      this.dictionary.clear();\n      return _get(_getPrototypeOf(DictionaryBuilder.prototype), \"clear\", this).call(this);\n    }\n  }, {\n    key: \"valueToKey\",\n    value: function valueToKey(val) {\n      return typeof val === 'string' ? val : \"\".concat(val);\n    }\n  }]);\n  return DictionaryBuilder;\n}(Builder);","map":{"version":3,"names":["Dictionary","Builder","DictionaryBuilder","_Builder","_inherits","_super","_createSuper","_ref","_this","type","nulls","hashFn","_classCallCheck","call","dictionary","indices","id","isOrdered","_nulls","_dictionaryOffset","_keysToIndices","Object","create","new","valueToKey","_createClass","key","get","values","nullCount","nullBitmap","byteLength","reservedLength","reservedByteLength","value","isValid","setValid","index","valid","length","setValue","keysToIndices","idx","undefined","append","flush","prev","_dictionary","curr","toVector","data","clone","concat","finished","clear","finish","_get","_getPrototypeOf","prototype","val"],"sources":["builder/dictionary.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}