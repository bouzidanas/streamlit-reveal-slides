{"ast":null,"code":"import _objectSpread from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream(writableStrategy, readableStrategy) {\n  var queue = new AsyncByteQueue();\n  var reader = null;\n  var readable = new ReadableStream({\n    cancel: function cancel() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return queue.close();\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    start: function start(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = next;\n              _context2.t1 = controller;\n              _context2.t2 = reader;\n              if (_context2.t2) {\n                _context2.next = 7;\n                break;\n              }\n              _context2.next = 6;\n              return open();\n            case 6:\n              _context2.t2 = reader = _context2.sent;\n            case 7:\n              _context2.t3 = _context2.t2;\n              _context2.next = 10;\n              return (0, _context2.t0)(_context2.t1, _context2.t3);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    pull: function pull(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!reader) {\n                _context3.next = 5;\n                break;\n              }\n              _context3.next = 3;\n              return next(controller, reader);\n            case 3:\n              _context3.next = 6;\n              break;\n            case 5:\n              controller.close();\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  });\n  return {\n    writable: new WritableStream(queue, _objectSpread({\n      'highWaterMark': Math.pow(2, 14)\n    }, writableStrategy)),\n    readable: readable\n  };\n  function open() {\n    return _open.apply(this, arguments);\n  }\n  function _open() {\n    _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return RecordBatchReader.from(queue);\n          case 2:\n            _context4.next = 4;\n            return _context4.sent.open(readableStrategy);\n          case 4:\n            return _context4.abrupt(\"return\", _context4.sent);\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return _open.apply(this, arguments);\n  }\n  function next(_x, _x2) {\n    return _next.apply(this, arguments);\n  }\n  function _next() {\n    _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(controller, reader) {\n      var size, r;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            size = controller.desiredSize;\n            r = null;\n          case 2:\n            _context5.next = 4;\n            return reader.next();\n          case 4:\n            if ((r = _context5.sent).done) {\n              _context5.next = 10;\n              break;\n            }\n            controller.enqueue(r.value);\n            if (!(size != null && --size <= 0)) {\n              _context5.next = 8;\n              break;\n            }\n            return _context5.abrupt(\"return\");\n          case 8:\n            _context5.next = 2;\n            break;\n          case 10:\n            controller.close();\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return _next.apply(this, arguments);\n  }\n}","map":{"version":3,"names":["AsyncByteQueue","RecordBatchReader","recordBatchReaderThroughDOMStream","writableStrategy","readableStrategy","queue","reader","readable","ReadableStream","cancel","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","close","stop","start","controller","_callee2","_callee2$","_context2","t0","t1","t2","open","sent","t3","pull","_callee3","_callee3$","_context3","writable","WritableStream","_objectSpread","Math","pow","_open","apply","arguments","_callee4","_callee4$","_context4","from","abrupt","_x","_x2","_next","_callee5","size","r","_callee5$","_context5","desiredSize","done","enqueue","value"],"sources":["io/whatwg/reader.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}