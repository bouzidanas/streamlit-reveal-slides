{"ast":null,"code":"import _construct from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _slicedToArray from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { StructVector } from './vector/index';\nexport var RecordBatch = /*#__PURE__*/function (_StructVector) {\n  _inherits(RecordBatch, _StructVector);\n  var _super = _createSuper(RecordBatch);\n  function RecordBatch() {\n    var _this;\n    _classCallCheck(this, RecordBatch);\n    var data;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var schema = args[0];\n    var children;\n    if (args[1] instanceof Data) {\n      data = args[1];\n      children = args[2];\n    } else {\n      var fields = schema.fields;\n      var length = args[1],\n        childData = args[2];\n      data = Data.Struct(new Struct(fields), 0, length, 0, null, childData);\n    }\n    _this = _super.call(this, data, children);\n    _this._schema = schema;\n    return _this;\n  }\n  /** @nocollapse */\n  _createClass(RecordBatch, [{\n    key: \"clone\",\n    value: function clone(data) {\n      var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._children;\n      return new RecordBatch(this._schema, data, children);\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      for (var _len2 = arguments.length, others = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        others[_key2] = arguments[_key2];\n      }\n      var schema = this._schema,\n        chunks = Chunked.flatten.apply(Chunked, [this].concat(others));\n      return new Table(schema, chunks.map(function (_ref) {\n        var data = _ref.data;\n        return new RecordBatch(schema, data);\n      }));\n    }\n  }, {\n    key: \"schema\",\n    get: function get() {\n      return this._schema;\n    }\n  }, {\n    key: \"numCols\",\n    get: function get() {\n      return this._schema.fields.length;\n    }\n  }, {\n    key: \"dictionaries\",\n    get: function get() {\n      return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      var nameToIndex = this._schema.fields.reduce(function (m, f, i) {\n        return m.set(f.name, i);\n      }, new Map());\n      for (var _len3 = arguments.length, columnNames = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        columnNames[_key3] = arguments[_key3];\n      }\n      return this.selectAt.apply(this, _toConsumableArray(columnNames.map(function (columnName) {\n        return nameToIndex.get(columnName);\n      }).filter(function (x) {\n        return x > -1;\n      })));\n    }\n  }, {\n    key: \"selectAt\",\n    value: function selectAt() {\n      var _this$_schema,\n        _this2 = this;\n      for (var _len4 = arguments.length, columnIndices = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        columnIndices[_key4] = arguments[_key4];\n      }\n      var schema = (_this$_schema = this._schema).selectAt.apply(_this$_schema, columnIndices);\n      var childData = columnIndices.map(function (i) {\n        return _this2.data.childData[i];\n      }).filter(Boolean);\n      return new RecordBatch(schema, this.length, childData);\n    }\n  }], [{\n    key: \"from\",\n    value: function from(options) {\n      if (isIterable(options['values'])) {\n        return Table.from(options);\n      }\n      return Table.from(options);\n    }\n    /** @nocollapse */\n  }, {\n    key: \"new\",\n    value: function _new() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      var _selectFieldArgs = selectFieldArgs(args),\n        _selectFieldArgs2 = _slicedToArray(_selectFieldArgs, 2),\n        fs = _selectFieldArgs2[0],\n        xs = _selectFieldArgs2[1];\n      var vs = xs.filter(function (x) {\n        return x instanceof Vector;\n      });\n      return _construct(RecordBatch, _toConsumableArray(ensureSameLengthData(new Schema(fs), vs.map(function (x) {\n        return x.data;\n      }))));\n    }\n  }]);\n  return RecordBatch;\n}(StructVector);\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport var _InternalEmptyPlaceholderRecordBatch = /*#__PURE__*/function (_RecordBatch) {\n  _inherits(_InternalEmptyPlaceholderRecordBatch, _RecordBatch);\n  var _super2 = _createSuper(_InternalEmptyPlaceholderRecordBatch);\n  function _InternalEmptyPlaceholderRecordBatch(schema) {\n    _classCallCheck(this, _InternalEmptyPlaceholderRecordBatch);\n    return _super2.call(this, schema, 0, schema.fields.map(function (f) {\n      return Data.new(f.type, 0, 0, 0);\n    }));\n  }\n  return _createClass(_InternalEmptyPlaceholderRecordBatch);\n}(RecordBatch);\n/** @ignore */\nvar DictionaryCollector = /*#__PURE__*/function (_Visitor) {\n  _inherits(DictionaryCollector, _Visitor);\n  var _super3 = _createSuper(DictionaryCollector);\n  function DictionaryCollector() {\n    var _this3;\n    _classCallCheck(this, DictionaryCollector);\n    _this3 = _super3.apply(this, arguments);\n    _this3.dictionaries = new Map();\n    return _this3;\n  }\n  _createClass(DictionaryCollector, [{\n    key: \"visit\",\n    value: function visit(data, type) {\n      var _this4 = this;\n      if (DataType.isDictionary(type)) {\n        return this.visitDictionary(data, type);\n      } else {\n        data.childData.forEach(function (child, i) {\n          return _this4.visit(child, type.children[i].type);\n        });\n      }\n      return this;\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary(data, type) {\n      var dictionary = data.dictionary;\n      if (dictionary && dictionary.length > 0) {\n        this.dictionaries.set(type.id, dictionary);\n      }\n      return this;\n    }\n  }], [{\n    key: \"collect\",\n    value: function collect(batch) {\n      return new DictionaryCollector().visit(batch.data, new Struct(batch.schema.fields)).dictionaries;\n    }\n  }]);\n  return DictionaryCollector;\n}(Visitor);","map":{"version":3,"names":["Data","Table","Vector","Visitor","Schema","isIterable","Chunked","selectFieldArgs","DataType","Struct","ensureSameLengthData","StructVector","RecordBatch","_StructVector","_inherits","_super","_createSuper","_this","_classCallCheck","data","_len","arguments","length","args","Array","_key","schema","children","fields","childData","call","_schema","_createClass","key","value","clone","undefined","_children","concat","_len2","others","_key2","chunks","flatten","apply","map","_ref","get","_dictionaries","DictionaryCollector","collect","select","nameToIndex","reduce","m","f","i","set","name","Map","_len3","columnNames","_key3","selectAt","_toConsumableArray","columnName","filter","x","_this$_schema","_this2","_len4","columnIndices","_key4","Boolean","from","options","_new","_len5","_key5","_selectFieldArgs","_selectFieldArgs2","_slicedToArray","fs","xs","vs","_construct","_InternalEmptyPlaceholderRecordBatch","_RecordBatch","_super2","new","type","_Visitor","_super3","_this3","dictionaries","visit","_this4","isDictionary","visitDictionary","forEach","child","dictionary","id","batch"],"sources":["recordbatch.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}