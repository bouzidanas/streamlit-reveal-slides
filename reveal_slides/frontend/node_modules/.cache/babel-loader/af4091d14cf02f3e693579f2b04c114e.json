{"ast":null,"code":"/*!\n * The reveal.js markdown plugin. Handles parsing of\n * markdown inside of presentations as well as loading\n * of external markdown documents.\n */\n\nimport { marked } from 'marked';\nconst DEFAULT_SLIDE_SEPARATOR = '\\r?\\n---\\r?\\n',\n  DEFAULT_NOTES_SEPARATOR = 'notes?:',\n  DEFAULT_ELEMENT_ATTRIBUTES_SEPARATOR = '\\\\\\.element\\\\\\s*?(.+?)$',\n  DEFAULT_SLIDE_ATTRIBUTES_SEPARATOR = '\\\\\\.slide:\\\\\\s*?(\\\\\\S.+?)$';\nconst SCRIPT_END_PLACEHOLDER = '__SCRIPT_END__';\nconst CODE_LINE_NUMBER_REGEX = /\\[([\\s\\d,|-]*)\\]/;\nconst HTML_ESCAPE_MAP = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst Plugin = () => {\n  // The reveal.js instance this plugin is attached to\n  let deck;\n\n  /**\n   * Retrieves the markdown contents of a slide section\n   * element. Normalizes leading tabs/whitespace.\n   */\n  function getMarkdownFromSlide(section) {\n    // look for a <script> or <textarea data-template> wrapper\n    var template = section.querySelector('[data-template]') || section.querySelector('script');\n\n    // strip leading whitespace so it isn't evaluated as code\n    var text = (template || section).textContent;\n\n    // restore script end tags\n    text = text.replace(new RegExp(SCRIPT_END_PLACEHOLDER, 'g'), '</script>');\n    var leadingWs = text.match(/^\\n?(\\s*)/)[1].length,\n      leadingTabs = text.match(/^\\n?(\\t*)/)[1].length;\n    if (leadingTabs > 0) {\n      text = text.replace(new RegExp('\\\\n?\\\\t{' + leadingTabs + '}(.*)', 'g'), function (m, p1) {\n        return '\\n' + p1;\n      });\n    } else if (leadingWs > 1) {\n      text = text.replace(new RegExp('\\\\n? {' + leadingWs + '}(.*)', 'g'), function (m, p1) {\n        return '\\n' + p1;\n      });\n    }\n    return text;\n  }\n\n  /**\n   * Given a markdown slide section element, this will\n   * return all arguments that aren't related to markdown\n   * parsing. Used to forward any other user-defined arguments\n   * to the output markdown slide.\n   */\n  function getForwardedAttributes(section) {\n    var attributes = section.attributes;\n    var result = [];\n    for (var i = 0, len = attributes.length; i < len; i++) {\n      var name = attributes[i].name,\n        value = attributes[i].value;\n\n      // disregard attributes that are used for markdown loading/parsing\n      if (/data\\-(markdown|separator|vertical|notes)/gi.test(name)) continue;\n      if (value) {\n        result.push(name + '=\"' + value + '\"');\n      } else {\n        result.push(name);\n      }\n    }\n    return result.join(' ');\n  }\n\n  /**\n   * Inspects the given options and fills out default\n   * values for what's not defined.\n   */\n  function getSlidifyOptions(options) {\n    options = options || {};\n    options.separator = options.separator || DEFAULT_SLIDE_SEPARATOR;\n    options.notesSeparator = options.notesSeparator || DEFAULT_NOTES_SEPARATOR;\n    options.attributes = options.attributes || '';\n    return options;\n  }\n\n  /**\n   * Helper function for constructing a markdown slide.\n   */\n  function createMarkdownSlide(content, options) {\n    options = getSlidifyOptions(options);\n    var notesMatch = content.split(new RegExp(options.notesSeparator, 'mgi'));\n    if (notesMatch.length === 2) {\n      content = notesMatch[0] + '<aside class=\"notes\">' + marked(notesMatch[1].trim()) + '</aside>';\n    }\n\n    // prevent script end tags in the content from interfering\n    // with parsing\n    content = content.replace(/<\\/script>/g, SCRIPT_END_PLACEHOLDER);\n    return '<script type=\"text/template\">' + content + '</script>';\n  }\n\n  /**\n   * Parses a data string into multiple slides based\n   * on the passed in separator arguments.\n   */\n  function slidify(markdown, options) {\n    options = getSlidifyOptions(options);\n    var separatorRegex = new RegExp(options.separator + (options.verticalSeparator ? '|' + options.verticalSeparator : ''), 'mg'),\n      horizontalSeparatorRegex = new RegExp(options.separator);\n    var matches,\n      lastIndex = 0,\n      isHorizontal,\n      wasHorizontal = true,\n      content,\n      sectionStack = [];\n\n    // iterate until all blocks between separators are stacked up\n    while (matches = separatorRegex.exec(markdown)) {\n      var notes = null;\n\n      // determine direction (horizontal by default)\n      isHorizontal = horizontalSeparatorRegex.test(matches[0]);\n      if (!isHorizontal && wasHorizontal) {\n        // create vertical stack\n        sectionStack.push([]);\n      }\n\n      // pluck slide content from markdown input\n      content = markdown.substring(lastIndex, matches.index);\n      if (isHorizontal && wasHorizontal) {\n        // add to horizontal stack\n        sectionStack.push(content);\n      } else {\n        // add to vertical stack\n        sectionStack[sectionStack.length - 1].push(content);\n      }\n      lastIndex = separatorRegex.lastIndex;\n      wasHorizontal = isHorizontal;\n    }\n\n    // add the remaining slide\n    (wasHorizontal ? sectionStack : sectionStack[sectionStack.length - 1]).push(markdown.substring(lastIndex));\n    var markdownSections = '';\n\n    // flatten the hierarchical stack, and insert <section data-markdown> tags\n    for (var i = 0, len = sectionStack.length; i < len; i++) {\n      // vertical\n      if (sectionStack[i] instanceof Array) {\n        markdownSections += '<section ' + options.attributes + '>';\n        sectionStack[i].forEach(function (child) {\n          markdownSections += '<section data-markdown>' + createMarkdownSlide(child, options) + '</section>';\n        });\n        markdownSections += '</section>';\n      } else {\n        markdownSections += '<section ' + options.attributes + ' data-markdown>' + createMarkdownSlide(sectionStack[i], options) + '</section>';\n      }\n    }\n    return markdownSections;\n  }\n\n  /**\n   * Parses any current data-markdown slides, splits\n   * multi-slide markdown into separate sections and\n   * handles loading of external markdown.\n   */\n  function processSlides(scope) {\n    return new Promise(function (resolve) {\n      var externalPromises = [];\n      [].slice.call(scope.querySelectorAll('section[data-markdown]:not([data-markdown-parsed])')).forEach(function (section, i) {\n        if (section.getAttribute('data-markdown').length) {\n          externalPromises.push(loadExternalMarkdown(section).then(\n          // Finished loading external file\n          function (xhr, url) {\n            section.outerHTML = slidify(xhr.responseText, {\n              separator: section.getAttribute('data-separator'),\n              verticalSeparator: section.getAttribute('data-separator-vertical'),\n              notesSeparator: section.getAttribute('data-separator-notes'),\n              attributes: getForwardedAttributes(section)\n            });\n          },\n          // Failed to load markdown\n          function (xhr, url) {\n            section.outerHTML = '<section data-state=\"alert\">' + 'ERROR: The attempt to fetch ' + url + ' failed with HTTP status ' + xhr.status + '.' + 'Check your browser\\'s JavaScript console for more details.' + '<p>Remember that you need to serve the presentation HTML from a HTTP server.</p>' + '</section>';\n          }));\n        } else {\n          console.log(\"parsing markdown string into slides\");\n          section.outerHTML = slidify(getMarkdownFromSlide(section), {\n            separator: section.getAttribute('data-separator'),\n            verticalSeparator: section.getAttribute('data-separator-vertical'),\n            notesSeparator: section.getAttribute('data-separator-notes'),\n            attributes: getForwardedAttributes(section)\n          });\n        }\n      });\n      Promise.all(externalPromises).then(resolve);\n    });\n  }\n  function loadExternalMarkdown(section) {\n    return new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest(),\n        url = section.getAttribute('data-markdown');\n      var datacharset = section.getAttribute('data-charset');\n\n      // see https://developer.mozilla.org/en-US/docs/Web/API/element.getAttribute#Notes\n      if (datacharset != null && datacharset != '') {\n        xhr.overrideMimeType('text/html; charset=' + datacharset);\n      }\n      xhr.onreadystatechange = function (section, xhr) {\n        if (xhr.readyState === 4) {\n          // file protocol yields status code 0 (useful for local debug, mobile applications etc.)\n          if (xhr.status >= 200 && xhr.status < 300 || xhr.status === 0) {\n            resolve(xhr, url);\n          } else {\n            reject(xhr, url);\n          }\n        }\n      }.bind(this, section, xhr);\n      xhr.open('GET', url, true);\n      try {\n        xhr.send();\n      } catch (e) {\n        console.warn('Failed to get the Markdown file ' + url + '. Make sure that the presentation and the file are served by a HTTP server and the file can be found there. ' + e);\n        resolve(xhr, url);\n      }\n    });\n  }\n\n  /**\n   * Check if a node value has the attributes pattern.\n   * If yes, extract it and add that value as one or several attributes\n   * to the target element.\n   *\n   * You need Cache Killer on Chrome to see the effect on any FOM transformation\n   * directly on refresh (F5)\n   * http://stackoverflow.com/questions/5690269/disabling-chrome-cache-for-website-development/7000899#answer-11786277\n   */\n  function addAttributeInElement(node, elementTarget, separator) {\n    var mardownClassesInElementsRegex = new RegExp(separator, 'mg');\n    var mardownClassRegex = new RegExp(\"([^\\\"= ]+?)=\\\"([^\\\"]+?)\\\"|(data-[^\\\"= ]+?)(?=[\\\" ])\", 'mg');\n    var nodeValue = node.nodeValue;\n    var matches, matchesClass;\n    if (matches = mardownClassesInElementsRegex.exec(nodeValue)) {\n      var classes = matches[1];\n      nodeValue = nodeValue.substring(0, matches.index) + nodeValue.substring(mardownClassesInElementsRegex.lastIndex);\n      node.nodeValue = nodeValue;\n      while (matchesClass = mardownClassRegex.exec(classes)) {\n        if (matchesClass[2]) {\n          elementTarget.setAttribute(matchesClass[1], matchesClass[2]);\n        } else {\n          elementTarget.setAttribute(matchesClass[3], \"\");\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Add attributes to the parent element of a text node,\n   * or the element of an attribute node.\n   */\n  function addAttributes(section, element, previousElement, separatorElementAttributes, separatorSectionAttributes) {\n    if (element != null && element.childNodes != undefined && element.childNodes.length > 0) {\n      var previousParentElement = element;\n      for (var i = 0; i < element.childNodes.length; i++) {\n        var childElement = element.childNodes[i];\n        if (i > 0) {\n          var j = i - 1;\n          while (j >= 0) {\n            var aPreviousChildElement = element.childNodes[j];\n            if (typeof aPreviousChildElement.setAttribute == 'function' && aPreviousChildElement.tagName != \"BR\") {\n              previousParentElement = aPreviousChildElement;\n              break;\n            }\n            j = j - 1;\n          }\n        }\n        var parentSection = section;\n        if (childElement.nodeName == \"section\") {\n          parentSection = childElement;\n          previousParentElement = childElement;\n        }\n        if (typeof childElement.setAttribute == 'function' || childElement.nodeType == Node.COMMENT_NODE) {\n          addAttributes(parentSection, childElement, previousParentElement, separatorElementAttributes, separatorSectionAttributes);\n        }\n      }\n    }\n    if (element.nodeType == Node.COMMENT_NODE) {\n      if (addAttributeInElement(element, previousElement, separatorElementAttributes) == false) {\n        addAttributeInElement(element, section, separatorSectionAttributes);\n      }\n    }\n  }\n\n  /**\n   * Converts any current data-markdown slides in the\n   * DOM to HTML.\n   */\n  function convertSlides() {\n    var sections = deck.getRevealElement().querySelectorAll('[data-markdown]:not([data-markdown-parsed])');\n    [].slice.call(sections).forEach(function (section) {\n      section.setAttribute('data-markdown-parsed', true);\n      var notes = section.querySelector('aside.notes');\n      var markdown = getMarkdownFromSlide(section);\n      section.innerHTML = marked(markdown);\n      addAttributes(section, section, null, section.getAttribute('data-element-attributes') || section.parentNode.getAttribute('data-element-attributes') || DEFAULT_ELEMENT_ATTRIBUTES_SEPARATOR, section.getAttribute('data-attributes') || section.parentNode.getAttribute('data-attributes') || DEFAULT_SLIDE_ATTRIBUTES_SEPARATOR);\n\n      // If there were notes, we need to re-add them after\n      // having overwritten the section's HTML\n      if (notes) {\n        section.appendChild(notes);\n      }\n    });\n    return Promise.resolve();\n  }\n  function escapeForHTML(input) {\n    return input.replace(/([&<>'\"])/g, char => HTML_ESCAPE_MAP[char]);\n  }\n  return {\n    id: 'markdown',\n    /**\n     * Starts processing and converting Markdown within the\n     * current reveal.js deck.\n     */\n    init: function (reveal) {\n      deck = reveal;\n      let {\n        renderer,\n        animateLists,\n        ...markedOptions\n      } = deck.getConfig().markdown || {};\n      if (!renderer) {\n        renderer = new marked.Renderer();\n        renderer.code = (code, language) => {\n          // Off by default\n          let lineNumbers = '';\n\n          // Users can opt in to show line numbers and highlight\n          // specific lines.\n          // ```javascript []        show line numbers\n          // ```javascript [1,4-8]   highlights lines 1 and 4-8\n          if (CODE_LINE_NUMBER_REGEX.test(language)) {\n            lineNumbers = language.match(CODE_LINE_NUMBER_REGEX)[1].trim();\n            lineNumbers = `data-line-numbers=\"${lineNumbers}\"`;\n            language = language.replace(CODE_LINE_NUMBER_REGEX, '').trim();\n          }\n\n          // Escape before this gets injected into the DOM to\n          // avoid having the HTML parser alter our code before\n          // highlight.js is able to read it\n          code = escapeForHTML(code);\n          return `<pre><code ${lineNumbers} class=\"${language}\">${code}</code></pre>`;\n        };\n      }\n      if (animateLists === true) {\n        renderer.listitem = text => `<li class=\"fragment\">${text}</li>`;\n      }\n      marked.setOptions({\n        renderer,\n        ...markedOptions\n      });\n      return processSlides(deck.getRevealElement()).then(convertSlides);\n    },\n    // TODO: Do these belong in the API?\n    processSlides: processSlides,\n    convertSlides: convertSlides,\n    slidify: slidify,\n    marked: marked\n  };\n};\n_c = Plugin;\nexport default Plugin;\nvar _c;\n$RefreshReg$(_c, \"Plugin\");","map":{"version":3,"names":["marked","DEFAULT_SLIDE_SEPARATOR","DEFAULT_NOTES_SEPARATOR","DEFAULT_ELEMENT_ATTRIBUTES_SEPARATOR","DEFAULT_SLIDE_ATTRIBUTES_SEPARATOR","SCRIPT_END_PLACEHOLDER","CODE_LINE_NUMBER_REGEX","HTML_ESCAPE_MAP","Plugin","deck","getMarkdownFromSlide","section","template","querySelector","text","textContent","replace","RegExp","leadingWs","match","length","leadingTabs","m","p1","getForwardedAttributes","attributes","result","i","len","name","value","test","push","join","getSlidifyOptions","options","separator","notesSeparator","createMarkdownSlide","content","notesMatch","split","trim","slidify","markdown","separatorRegex","verticalSeparator","horizontalSeparatorRegex","matches","lastIndex","isHorizontal","wasHorizontal","sectionStack","exec","notes","substring","index","markdownSections","Array","forEach","child","processSlides","scope","Promise","resolve","externalPromises","slice","call","querySelectorAll","getAttribute","loadExternalMarkdown","then","xhr","url","outerHTML","responseText","status","console","log","all","reject","XMLHttpRequest","datacharset","overrideMimeType","onreadystatechange","readyState","bind","open","send","e","warn","addAttributeInElement","node","elementTarget","mardownClassesInElementsRegex","mardownClassRegex","nodeValue","matchesClass","classes","setAttribute","addAttributes","element","previousElement","separatorElementAttributes","separatorSectionAttributes","childNodes","undefined","previousParentElement","childElement","j","aPreviousChildElement","tagName","parentSection","nodeName","nodeType","Node","COMMENT_NODE","convertSlides","sections","getRevealElement","innerHTML","parentNode","appendChild","escapeForHTML","input","char","id","init","reveal","renderer","animateLists","markedOptions","getConfig","Renderer","code","language","lineNumbers","listitem","setOptions","_c","$RefreshReg$"],"sources":["/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/src/plugin.js"],"sourcesContent":["/*!\n * The reveal.js markdown plugin. Handles parsing of\n * markdown inside of presentations as well as loading\n * of external markdown documents.\n */\n\nimport { marked } from 'marked';\n\nconst DEFAULT_SLIDE_SEPARATOR = '\\r?\\n---\\r?\\n',\n\t  DEFAULT_NOTES_SEPARATOR = 'notes?:',\n\t  DEFAULT_ELEMENT_ATTRIBUTES_SEPARATOR = '\\\\\\.element\\\\\\s*?(.+?)$',\n\t  DEFAULT_SLIDE_ATTRIBUTES_SEPARATOR = '\\\\\\.slide:\\\\\\s*?(\\\\\\S.+?)$';\n\nconst SCRIPT_END_PLACEHOLDER = '__SCRIPT_END__';\n\nconst CODE_LINE_NUMBER_REGEX = /\\[([\\s\\d,|-]*)\\]/;\n\nconst HTML_ESCAPE_MAP = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nconst Plugin = () => {\n\n\t// The reveal.js instance this plugin is attached to\n\tlet deck;\n\n\t/**\n\t * Retrieves the markdown contents of a slide section\n\t * element. Normalizes leading tabs/whitespace.\n\t */\n\tfunction getMarkdownFromSlide( section ) {\n\n\t\t// look for a <script> or <textarea data-template> wrapper\n\t\tvar template = section.querySelector( '[data-template]' ) || section.querySelector( 'script' );\n\n\t\t// strip leading whitespace so it isn't evaluated as code\n\t\tvar text = ( template || section ).textContent;\n\n\t\t// restore script end tags\n\t\ttext = text.replace( new RegExp( SCRIPT_END_PLACEHOLDER, 'g' ), '</script>' );\n\n\t\tvar leadingWs = text.match( /^\\n?(\\s*)/ )[1].length,\n\t\t\tleadingTabs = text.match( /^\\n?(\\t*)/ )[1].length;\n\n\t\tif( leadingTabs > 0 ) {\n\t\t\ttext = text.replace( new RegExp('\\\\n?\\\\t{' + leadingTabs + '}(.*)','g'), function(m, p1) { return '\\n' + p1 ; } );\n\t\t}\n\t\telse if( leadingWs > 1 ) {\n\t\t\ttext = text.replace( new RegExp('\\\\n? {' + leadingWs + '}(.*)', 'g'), function(m, p1) { return '\\n' + p1 ; } );\n\t\t}\n\n\t\treturn text;\n\n\t}\n\n\t/**\n\t * Given a markdown slide section element, this will\n\t * return all arguments that aren't related to markdown\n\t * parsing. Used to forward any other user-defined arguments\n\t * to the output markdown slide.\n\t */\n\tfunction getForwardedAttributes( section ) {\n\n\t\tvar attributes = section.attributes;\n\t\tvar result = [];\n\n\t\tfor( var i = 0, len = attributes.length; i < len; i++ ) {\n\t\t\tvar name = attributes[i].name,\n\t\t\t\tvalue = attributes[i].value;\n\n\t\t\t// disregard attributes that are used for markdown loading/parsing\n\t\t\tif( /data\\-(markdown|separator|vertical|notes)/gi.test( name ) ) continue;\n\n\t\t\tif( value ) {\n\t\t\t\tresult.push( name + '=\"' + value + '\"' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult.push( name );\n\t\t\t}\n\t\t}\n\n\t\treturn result.join( ' ' );\n\n\t}\n\n\t/**\n\t * Inspects the given options and fills out default\n\t * values for what's not defined.\n\t */\n\tfunction getSlidifyOptions( options ) {\n\n\t\toptions = options || {};\n\t\toptions.separator = options.separator || DEFAULT_SLIDE_SEPARATOR;\n\t\toptions.notesSeparator = options.notesSeparator || DEFAULT_NOTES_SEPARATOR;\n\t\toptions.attributes = options.attributes || '';\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Helper function for constructing a markdown slide.\n\t */\n\tfunction createMarkdownSlide( content, options ) {\n\n\t\toptions = getSlidifyOptions( options );\n\n\t\tvar notesMatch = content.split( new RegExp( options.notesSeparator, 'mgi' ) );\n\n\t\tif( notesMatch.length === 2 ) {\n\t\t\tcontent = notesMatch[0] + '<aside class=\"notes\">' + marked(notesMatch[1].trim()) + '</aside>';\n\t\t}\n\n\t\t// prevent script end tags in the content from interfering\n\t\t// with parsing\n\t\tcontent = content.replace( /<\\/script>/g, SCRIPT_END_PLACEHOLDER );\n\n\t\treturn '<script type=\"text/template\">' + content + '</script>';\n\n\t}\n\n\t/**\n\t * Parses a data string into multiple slides based\n\t * on the passed in separator arguments.\n\t */\n\tfunction slidify( markdown, options ) {\n\n\t\toptions = getSlidifyOptions( options );\n\n\t\tvar separatorRegex = new RegExp( options.separator + ( options.verticalSeparator ? '|' + options.verticalSeparator : '' ), 'mg' ),\n\t\t\thorizontalSeparatorRegex = new RegExp( options.separator );\n\n\t\tvar matches,\n\t\t\tlastIndex = 0,\n\t\t\tisHorizontal,\n\t\t\twasHorizontal = true,\n\t\t\tcontent,\n\t\t\tsectionStack = [];\n\n\t\t// iterate until all blocks between separators are stacked up\n\t\twhile( matches = separatorRegex.exec( markdown ) ) {\n\t\t\tvar notes = null;\n\n\t\t\t// determine direction (horizontal by default)\n\t\t\tisHorizontal = horizontalSeparatorRegex.test( matches[0] );\n\n\t\t\tif( !isHorizontal && wasHorizontal ) {\n\t\t\t\t// create vertical stack\n\t\t\t\tsectionStack.push( [] );\n\t\t\t}\n\n\t\t\t// pluck slide content from markdown input\n\t\t\tcontent = markdown.substring( lastIndex, matches.index );\n\n\t\t\tif( isHorizontal && wasHorizontal ) {\n\t\t\t\t// add to horizontal stack\n\t\t\t\tsectionStack.push( content );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// add to vertical stack\n\t\t\t\tsectionStack[sectionStack.length-1].push( content );\n\t\t\t}\n\n\t\t\tlastIndex = separatorRegex.lastIndex;\n\t\t\twasHorizontal = isHorizontal;\n\t\t}\n\n\t\t// add the remaining slide\n\t\t( wasHorizontal ? sectionStack : sectionStack[sectionStack.length-1] ).push( markdown.substring( lastIndex ) );\n\n\t\tvar markdownSections = '';\n\n\t\t// flatten the hierarchical stack, and insert <section data-markdown> tags\n\t\tfor( var i = 0, len = sectionStack.length; i < len; i++ ) {\n\t\t\t// vertical\n\t\t\tif( sectionStack[i] instanceof Array ) {\n\t\t\t\tmarkdownSections += '<section '+ options.attributes +'>';\n\n\t\t\t\tsectionStack[i].forEach( function( child ) {\n\t\t\t\t\tmarkdownSections += '<section data-markdown>' + createMarkdownSlide( child, options ) + '</section>';\n\t\t\t\t} );\n\n\t\t\t\tmarkdownSections += '</section>';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmarkdownSections += '<section '+ options.attributes +' data-markdown>' + createMarkdownSlide( sectionStack[i], options ) + '</section>';\n\t\t\t}\n\t\t}\n\n\t\treturn markdownSections;\n\n\t}\n\n\t/**\n\t * Parses any current data-markdown slides, splits\n\t * multi-slide markdown into separate sections and\n\t * handles loading of external markdown.\n\t */\n\tfunction processSlides( scope ) {\n\n\t\treturn new Promise( function( resolve ) {\n\n\t\t\tvar externalPromises = [];\n\n\t\t\t[].slice.call( scope.querySelectorAll( 'section[data-markdown]:not([data-markdown-parsed])') ).forEach( function( section, i ) {\n\n\t\t\t\tif( section.getAttribute( 'data-markdown' ).length ) {\n\n\t\t\t\t\texternalPromises.push( loadExternalMarkdown( section ).then(\n\n\t\t\t\t\t\t// Finished loading external file\n\t\t\t\t\t\tfunction( xhr, url ) {\n\t\t\t\t\t\t\tsection.outerHTML = slidify( xhr.responseText, {\n\t\t\t\t\t\t\t\tseparator: section.getAttribute( 'data-separator' ),\n\t\t\t\t\t\t\t\tverticalSeparator: section.getAttribute( 'data-separator-vertical' ),\n\t\t\t\t\t\t\t\tnotesSeparator: section.getAttribute( 'data-separator-notes' ),\n\t\t\t\t\t\t\t\tattributes: getForwardedAttributes( section )\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// Failed to load markdown\n\t\t\t\t\t\tfunction( xhr, url ) {\n\t\t\t\t\t\t\tsection.outerHTML = '<section data-state=\"alert\">' +\n\t\t\t\t\t\t\t\t'ERROR: The attempt to fetch ' + url + ' failed with HTTP status ' + xhr.status + '.' +\n\t\t\t\t\t\t\t\t'Check your browser\\'s JavaScript console for more details.' +\n\t\t\t\t\t\t\t\t'<p>Remember that you need to serve the presentation HTML from a HTTP server.</p>' +\n\t\t\t\t\t\t\t\t'</section>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t) );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(\"parsing markdown string into slides\")\n\t\t\t\t\tsection.outerHTML = slidify( getMarkdownFromSlide( section ), {\n\t\t\t\t\t\tseparator: section.getAttribute( 'data-separator' ),\n\t\t\t\t\t\tverticalSeparator: section.getAttribute( 'data-separator-vertical' ),\n\t\t\t\t\t\tnotesSeparator: section.getAttribute( 'data-separator-notes' ),\n\t\t\t\t\t\tattributes: getForwardedAttributes( section )\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tPromise.all( externalPromises ).then( resolve );\n\n\t\t} );\n\n\t}\n\n\tfunction loadExternalMarkdown( section ) {\n\n\t\treturn new Promise( function( resolve, reject ) {\n\n\t\t\tvar xhr = new XMLHttpRequest(),\n\t\t\t\turl = section.getAttribute( 'data-markdown' );\n\n\t\t\tvar datacharset = section.getAttribute( 'data-charset' );\n\n\t\t\t// see https://developer.mozilla.org/en-US/docs/Web/API/element.getAttribute#Notes\n\t\t\tif( datacharset != null && datacharset != '' ) {\n\t\t\t\txhr.overrideMimeType( 'text/html; charset=' + datacharset );\n\t\t\t}\n\n\t\t\txhr.onreadystatechange = function( section, xhr ) {\n\t\t\t\tif( xhr.readyState === 4 ) {\n\t\t\t\t\t// file protocol yields status code 0 (useful for local debug, mobile applications etc.)\n\t\t\t\t\tif ( ( xhr.status >= 200 && xhr.status < 300 ) || xhr.status === 0 ) {\n\n\t\t\t\t\t\tresolve( xhr, url );\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\n\t\t\t\t\t\treject( xhr, url );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind( this, section, xhr );\n\n\t\t\txhr.open( 'GET', url, true );\n\n\t\t\ttry {\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t\tcatch ( e ) {\n\t\t\t\tconsole.warn( 'Failed to get the Markdown file ' + url + '. Make sure that the presentation and the file are served by a HTTP server and the file can be found there. ' + e );\n\t\t\t\tresolve( xhr, url );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Check if a node value has the attributes pattern.\n\t * If yes, extract it and add that value as one or several attributes\n\t * to the target element.\n\t *\n\t * You need Cache Killer on Chrome to see the effect on any FOM transformation\n\t * directly on refresh (F5)\n\t * http://stackoverflow.com/questions/5690269/disabling-chrome-cache-for-website-development/7000899#answer-11786277\n\t */\n\tfunction addAttributeInElement( node, elementTarget, separator ) {\n\n\t\tvar mardownClassesInElementsRegex = new RegExp( separator, 'mg' );\n\t\tvar mardownClassRegex = new RegExp( \"([^\\\"= ]+?)=\\\"([^\\\"]+?)\\\"|(data-[^\\\"= ]+?)(?=[\\\" ])\", 'mg' );\n\t\tvar nodeValue = node.nodeValue;\n\t\tvar matches,\n\t\t\tmatchesClass;\n\t\tif( matches = mardownClassesInElementsRegex.exec( nodeValue ) ) {\n\n\t\t\tvar classes = matches[1];\n\t\t\tnodeValue = nodeValue.substring( 0, matches.index ) + nodeValue.substring( mardownClassesInElementsRegex.lastIndex );\n\t\t\tnode.nodeValue = nodeValue;\n\t\t\twhile( matchesClass = mardownClassRegex.exec( classes ) ) {\n\t\t\t\tif( matchesClass[2] ) {\n\t\t\t\t\telementTarget.setAttribute( matchesClass[1], matchesClass[2] );\n\t\t\t\t} else {\n\t\t\t\t\telementTarget.setAttribute( matchesClass[3], \"\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Add attributes to the parent element of a text node,\n\t * or the element of an attribute node.\n\t */\n\tfunction addAttributes( section, element, previousElement, separatorElementAttributes, separatorSectionAttributes ) {\n\n\t\tif ( element != null && element.childNodes != undefined && element.childNodes.length > 0 ) {\n\t\t\tvar previousParentElement = element;\n\t\t\tfor( var i = 0; i < element.childNodes.length; i++ ) {\n\t\t\t\tvar childElement = element.childNodes[i];\n\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\tvar j = i - 1;\n\t\t\t\t\twhile ( j >= 0 ) {\n\t\t\t\t\t\tvar aPreviousChildElement = element.childNodes[j];\n\t\t\t\t\t\tif ( typeof aPreviousChildElement.setAttribute == 'function' && aPreviousChildElement.tagName != \"BR\" ) {\n\t\t\t\t\t\t\tpreviousParentElement = aPreviousChildElement;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tj = j - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar parentSection = section;\n\t\t\t\tif( childElement.nodeName ==  \"section\" ) {\n\t\t\t\t\tparentSection = childElement ;\n\t\t\t\t\tpreviousParentElement = childElement ;\n\t\t\t\t}\n\t\t\t\tif ( typeof childElement.setAttribute == 'function' || childElement.nodeType == Node.COMMENT_NODE ) {\n\t\t\t\t\taddAttributes( parentSection, childElement, previousParentElement, separatorElementAttributes, separatorSectionAttributes );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( element.nodeType == Node.COMMENT_NODE ) {\n\t\t\tif ( addAttributeInElement( element, previousElement, separatorElementAttributes ) == false ) {\n\t\t\t\taddAttributeInElement( element, section, separatorSectionAttributes );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts any current data-markdown slides in the\n\t * DOM to HTML.\n\t */\n\tfunction convertSlides() {\n\n\t\tvar sections = deck.getRevealElement().querySelectorAll( '[data-markdown]:not([data-markdown-parsed])');\n\n\t\t[].slice.call( sections ).forEach( function( section ) {\n\n\t\t\tsection.setAttribute( 'data-markdown-parsed', true )\n\n\t\t\tvar notes = section.querySelector( 'aside.notes' );\n\t\t\tvar markdown = getMarkdownFromSlide( section );\n\n\t\t\tsection.innerHTML = marked( markdown );\n\t\t\taddAttributes( \tsection, section, null, section.getAttribute( 'data-element-attributes' ) ||\n\t\t\t\t\t\t\tsection.parentNode.getAttribute( 'data-element-attributes' ) ||\n\t\t\t\t\t\t\tDEFAULT_ELEMENT_ATTRIBUTES_SEPARATOR,\n\t\t\t\t\t\t\tsection.getAttribute( 'data-attributes' ) ||\n\t\t\t\t\t\t\tsection.parentNode.getAttribute( 'data-attributes' ) ||\n\t\t\t\t\t\t\tDEFAULT_SLIDE_ATTRIBUTES_SEPARATOR);\n\n\t\t\t// If there were notes, we need to re-add them after\n\t\t\t// having overwritten the section's HTML\n\t\t\tif( notes ) {\n\t\t\t\tsection.appendChild( notes );\n\t\t\t}\n\n\t\t} );\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\tfunction escapeForHTML( input ) {\n\n\t  return input.replace( /([&<>'\"])/g, char => HTML_ESCAPE_MAP[char] );\n\n\t}\n\n\treturn {\n\t\tid: 'markdown',\n\n\t\t/**\n\t\t * Starts processing and converting Markdown within the\n\t\t * current reveal.js deck.\n\t\t */\n\t\tinit: function( reveal ) {\n\n\t\t\tdeck = reveal;\n\n\t\t\tlet { renderer, animateLists, ...markedOptions } = deck.getConfig().markdown || {};\n\n\t\t\tif( !renderer ) {\n\t\t\t\trenderer = new marked.Renderer();\n\n\t\t\t\trenderer.code = ( code, language ) => {\n\n\t\t\t\t\t// Off by default\n\t\t\t\t\tlet lineNumbers = '';\n\n\t\t\t\t\t// Users can opt in to show line numbers and highlight\n\t\t\t\t\t// specific lines.\n\t\t\t\t\t// ```javascript []        show line numbers\n\t\t\t\t\t// ```javascript [1,4-8]   highlights lines 1 and 4-8\n\t\t\t\t\tif( CODE_LINE_NUMBER_REGEX.test( language ) ) {\n\t\t\t\t\t\tlineNumbers = language.match( CODE_LINE_NUMBER_REGEX )[1].trim();\n\t\t\t\t\t\tlineNumbers = `data-line-numbers=\"${lineNumbers}\"`;\n\t\t\t\t\t\tlanguage = language.replace( CODE_LINE_NUMBER_REGEX, '' ).trim();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Escape before this gets injected into the DOM to\n\t\t\t\t\t// avoid having the HTML parser alter our code before\n\t\t\t\t\t// highlight.js is able to read it\n\t\t\t\t\tcode = escapeForHTML( code );\n\n\t\t\t\t\treturn `<pre><code ${lineNumbers} class=\"${language}\">${code}</code></pre>`;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif( animateLists === true ) {\n\t\t\t\trenderer.listitem = text => `<li class=\"fragment\">${text}</li>`;\n\t\t\t}\n\n\t\t\tmarked.setOptions( {\n\t\t\t\trenderer,\n\t\t\t\t...markedOptions\n\t\t\t} );\n\n\t\t\treturn processSlides( deck.getRevealElement() ).then( convertSlides );\n\n\t\t},\n\n\t\t// TODO: Do these belong in the API?\n\t\tprocessSlides: processSlides,\n\t\tconvertSlides: convertSlides,\n\t\tslidify: slidify,\n\t\tmarked: marked\n\t}\n\n};\n\nexport default Plugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}