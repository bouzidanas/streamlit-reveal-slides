{"ast":null,"code":"import _get from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _classCallCheck from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport var IntBuilder = /*#__PURE__*/function (_FixedWidthBuilder) {\n  _inherits(IntBuilder, _FixedWidthBuilder);\n  var _super = _createSuper(IntBuilder);\n  function IntBuilder() {\n    _classCallCheck(this, IntBuilder);\n    return _super.apply(this, arguments);\n  }\n  _createClass(IntBuilder, [{\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      this._values.set(index, value);\n    }\n  }]);\n  return IntBuilder;\n}(FixedWidthBuilder);\n/** @ignore */\nexport var Int8Builder = /*#__PURE__*/function (_IntBuilder) {\n  _inherits(Int8Builder, _IntBuilder);\n  var _super2 = _createSuper(Int8Builder);\n  function Int8Builder() {\n    _classCallCheck(this, Int8Builder);\n    return _super2.apply(this, arguments);\n  }\n  return _createClass(Int8Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Int16Builder = /*#__PURE__*/function (_IntBuilder2) {\n  _inherits(Int16Builder, _IntBuilder2);\n  var _super3 = _createSuper(Int16Builder);\n  function Int16Builder() {\n    _classCallCheck(this, Int16Builder);\n    return _super3.apply(this, arguments);\n  }\n  return _createClass(Int16Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Int32Builder = /*#__PURE__*/function (_IntBuilder3) {\n  _inherits(Int32Builder, _IntBuilder3);\n  var _super4 = _createSuper(Int32Builder);\n  function Int32Builder() {\n    _classCallCheck(this, Int32Builder);\n    return _super4.apply(this, arguments);\n  }\n  return _createClass(Int32Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Int64Builder = /*#__PURE__*/function (_IntBuilder4) {\n  _inherits(Int64Builder, _IntBuilder4);\n  var _super5 = _createSuper(Int64Builder);\n  function Int64Builder(options) {\n    var _this;\n    _classCallCheck(this, Int64Builder);\n    if (options['nullValues']) {\n      options['nullValues'] = options['nullValues'].map(toBigInt);\n    }\n    _this = _super5.call(this, options);\n    _this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    return _this;\n  }\n  _createClass(Int64Builder, [{\n    key: \"values64\",\n    get: function get() {\n      return this._values.buffer64;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return _get(_getPrototypeOf(Int64Builder.prototype), \"isValid\", this).call(this, toBigInt(value));\n    }\n  }]);\n  return Int64Builder;\n}(IntBuilder);\n/** @ignore */\nexport var Uint8Builder = /*#__PURE__*/function (_IntBuilder5) {\n  _inherits(Uint8Builder, _IntBuilder5);\n  var _super6 = _createSuper(Uint8Builder);\n  function Uint8Builder() {\n    _classCallCheck(this, Uint8Builder);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(Uint8Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Uint16Builder = /*#__PURE__*/function (_IntBuilder6) {\n  _inherits(Uint16Builder, _IntBuilder6);\n  var _super7 = _createSuper(Uint16Builder);\n  function Uint16Builder() {\n    _classCallCheck(this, Uint16Builder);\n    return _super7.apply(this, arguments);\n  }\n  return _createClass(Uint16Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Uint32Builder = /*#__PURE__*/function (_IntBuilder7) {\n  _inherits(Uint32Builder, _IntBuilder7);\n  var _super8 = _createSuper(Uint32Builder);\n  function Uint32Builder() {\n    _classCallCheck(this, Uint32Builder);\n    return _super8.apply(this, arguments);\n  }\n  return _createClass(Uint32Builder);\n}(IntBuilder);\n/** @ignore */\nexport var Uint64Builder = /*#__PURE__*/function (_IntBuilder8) {\n  _inherits(Uint64Builder, _IntBuilder8);\n  var _super9 = _createSuper(Uint64Builder);\n  function Uint64Builder(options) {\n    var _this2;\n    _classCallCheck(this, Uint64Builder);\n    if (options['nullValues']) {\n      options['nullValues'] = options['nullValues'].map(toBigInt);\n    }\n    _this2 = _super9.call(this, options);\n    _this2._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    return _this2;\n  }\n  _createClass(Uint64Builder, [{\n    key: \"values64\",\n    get: function get() {\n      return this._values.buffer64;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return _get(_getPrototypeOf(Uint64Builder.prototype), \"isValid\", this).call(this, toBigInt(value));\n    }\n  }]);\n  return Uint64Builder;\n}(IntBuilder);\nvar toBigInt = function (memo) {\n  return function (value) {\n    if (ArrayBuffer.isView(value)) {\n      memo.buffer = value.buffer;\n      memo.byteOffset = value.byteOffset;\n      memo.byteLength = value.byteLength;\n      value = bignumToBigInt(memo);\n      memo.buffer = null;\n    }\n    return value;\n  };\n}({\n  'BigIntArray': BigInt64Array\n});","map":{"version":3,"names":["bignumToBigInt","WideBufferBuilder","BigInt64Array","FixedWidthBuilder","IntBuilder","_FixedWidthBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","setValue","index","_values","set","Int8Builder","_IntBuilder","_super2","Int16Builder","_IntBuilder2","_super3","Int32Builder","_IntBuilder3","_super4","Int64Builder","_IntBuilder4","_super5","options","_this","map","toBigInt","call","Int32Array","get","buffer64","isValid","_get","_getPrototypeOf","prototype","Uint8Builder","_IntBuilder5","_super6","Uint16Builder","_IntBuilder6","_super7","Uint32Builder","_IntBuilder7","_super8","Uint64Builder","_IntBuilder8","_super9","_this2","Uint32Array","memo","ArrayBuffer","isView","buffer","byteOffset","byteLength"],"sources":["builder/int.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}