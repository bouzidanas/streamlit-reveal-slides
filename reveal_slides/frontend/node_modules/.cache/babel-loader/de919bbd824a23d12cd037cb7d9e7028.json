{"ast":null,"code":"import React, { useRef, useEffect } from 'react';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar _excluded = [\"html\", \"dangerouslySetInnerHTML\"];\nfunction DangerouslySetHtmlContent(_ref) {\n  var html = _ref.html,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var divRef = useRef(null);\n  var isFirstRender = useRef(true);\n  useEffect(function () {\n    if (!html || !divRef.current) throw new Error(\"html prop cant't be null\");\n    if (!isFirstRender.current) return;\n    isFirstRender.current = false;\n    var slotHtml = document.createRange().createContextualFragment(html);\n    divRef.current.innerHTML = '';\n    divRef.current.appendChild(slotHtml);\n  }, [html, divRef]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    ref: divRef\n  }));\n}\nexport default DangerouslySetHtmlContent;","map":{"version":3,"names":["DangerouslySetHtmlContent","_ref","html","rest","_objectWithoutPropertiesLoose","_excluded","divRef","useRef","isFirstRender","useEffect","current","Error","slotHtml","document","createRange","createContextualFragment","innerHTML","appendChild","React","createElement","_extends","ref"],"sources":["../src/index.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\n\nfunction DangerouslySetHtmlContent({ html, dangerouslySetInnerHTML, ...rest }) {\n  // We remove 'dangerouslySetInnerHTML' from props passed to the div\n  const divRef = useRef(null)\n  const isFirstRender = useRef(true)\n\n  useEffect(() => {\n    if (!html || !divRef.current) throw new Error(\"html prop cant't be null\")\n    if (!isFirstRender.current) return\n    isFirstRender.current = false\n\n    const slotHtml = document.createRange().createContextualFragment(html) // Create a 'tiny' document and parse the html string\n    divRef.current.innerHTML = '' // Clear the container\n    divRef.current.appendChild(slotHtml) // Append the new content\n  }, [html, divRef])\n\n  // eslint-disable-next-line react/react-in-jsx-scope\n  return <div {...rest} ref={divRef} />\n}\n\nexport default DangerouslySetHtmlContent\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,yBAAyBA,CAAAC,IAAA,EAA6C;MAA1CC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAA8BC,IAAI,GAAAC,6BAAA,CAAAH,IAAA,EAAAI,SAAA;EAEzE,IAAMC,MAAM,GAAGC,MAAM,CAAC,IAAI,CAAC;EAC3B,IAAMC,aAAa,GAAGD,MAAM,CAAC,IAAI,CAAC;EAElCE,SAAS,CAAC,YAAM;IACd,IAAI,CAACP,IAAI,IAAI,CAACI,MAAM,CAACI,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IACzE,IAAI,CAACH,aAAa,CAACE,OAAO,EAAE;IAC5BF,aAAa,CAACE,OAAO,GAAG,KAAK;IAE7B,IAAME,QAAQ,GAAGC,QAAQ,CAACC,WAAW,EAAE,CAACC,wBAAwB,CAACb,IAAI,CAAC;IACtEI,MAAM,CAACI,OAAO,CAACM,SAAS,GAAG,EAAE;IAC7BV,MAAM,CAACI,OAAO,CAACO,WAAW,CAACL,QAAQ,CAAC;GACrC,EAAE,CAACV,IAAI,EAAEI,MAAM,CAAC,CAAC;EAGlB,oBAAOY,KAAA,CAAAC,aAAA,QAAAC,QAAA,KAASjB,IAAI;IAAEkB,GAAG,EAAEf;KAAU;AACvC"},"metadata":{},"sourceType":"module"}