{"ast":null,"code":"import _classCallCheck from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { MapRow } from './row';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { List } from '../type';\n/** @ignore */\nexport var MapVector = /*#__PURE__*/function (_BaseVector) {\n  _inherits(MapVector, _BaseVector);\n  var _super = _createSuper(MapVector);\n  function MapVector() {\n    _classCallCheck(this, MapVector);\n    return _super.apply(this, arguments);\n  }\n  _createClass(MapVector, [{\n    key: \"asList\",\n    value: function asList() {\n      var child = this.type.children[0];\n      return Vector.new(this.data.clone(new List(child)));\n    }\n  }, {\n    key: \"bind\",\n    value: function bind(index) {\n      var child = this.getChildAt(0);\n      var _this$valueOffsets = this.valueOffsets,\n        begin = _this$valueOffsets[index],\n        end = _this$valueOffsets[index + 1];\n      return new MapRow(child.slice(begin, end));\n    }\n  }]);\n  return MapVector;\n}(BaseVector);","map":{"version":3,"names":["MapRow","Vector","BaseVector","List","MapVector","_BaseVector","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","asList","child","type","children","new","data","clone","bind","index","getChildAt","_this$valueOffsets","valueOffsets","begin","end","slice"],"sources":["vector/map.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAM,QAAQ,OAAO;AAE9B,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAAiCC,IAAI,QAAQ,SAAS;AAEtD;AACA,WAAaC,SAA8D,0BAAAC,WAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,WAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAAA,SAAAA,UAAA;IAAAK,eAAA,OAAAL,SAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,SAAA;IAAAS,GAAA;IAAAC,KAAA,EAChE,SAAAC,OAAA,EAAM;MACT,IAAMC,KAAK,GAAG,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAwC;MAC1E,OAAOjB,MAAM,CAACkB,GAAG,CAAC,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,IAAIlB,IAAI,CAA+Ba,KAAK,CAAC,CAAC,CAAC;IACrF;EAAC;IAAAH,GAAA;IAAAC,KAAA,EACM,SAAAQ,KAAKC,KAAa;MACrB,IAAMP,KAAK,GAAG,IAAI,CAACQ,UAAU,CAA+B,CAAC,CAAC;MAC9D,IAAAC,kBAAA,GAA6C,IAAI,CAACC,YAAY;QAA7CC,KAAK,GAAAF,kBAAA,CAAbF,KAAK;QAAuBK,GAAG,GAAAH,kBAAA,CAAfF,KAAK,GAAG,CAAC;MAClC,OAAO,IAAIvB,MAAM,CAACgB,KAAM,CAACa,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC,CAAC;IAC/C;EAAC;EAAA,OAAAxB,SAAA;AAAA,EAT8EF,UAAsB"},"metadata":{},"sourceType":"module"}