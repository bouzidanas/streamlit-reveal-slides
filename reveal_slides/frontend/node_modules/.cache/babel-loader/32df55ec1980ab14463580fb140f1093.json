{"ast":null,"code":"import _objectSpread from\"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import{createGlobalStyle as _createGlobalStyle}from\"styled-components\";var _excluded=[\"html\",\"innerRef\"];import{Streamlit,withStreamlitConnection}from\"streamlit-component-lib\";import{useEffect,useMemo,useRef}from\"react\";import Reveal from'reveal.js';import RevealMarkdown from'reveal.js/plugin/markdown/markdown';import RevealHighlight from'reveal.js/plugin/highlight/highlight';import RevealMath from'reveal.js/plugin/math/math';import RevealSearch from'reveal.js/plugin/search/search';import RevealNotes from'reveal.js/plugin/notes/notes';import RevealZoom from'reveal.js/plugin/zoom/zoom';import'reveal.js/dist/reveal.css';import'reveal.js/plugin/highlight/monokai.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RevealSymbolPerSlideProgress;var GlobalCSS=_createGlobalStyle([\"\",\"\"],function(props){return props.inject;});var includedPlugins={\"markdown\":RevealMarkdown,\"highlight\":RevealHighlight,\"katex\":RevealMath.KaTeX,\"mathjax2\":RevealMath.MathJax2,\"mathjax3\":RevealMath.MathJax3,\"search\":RevealSearch,\"notes\":RevealNotes,\"zoom\":RevealZoom};// const simpleCommands = {\"left\": Reveal.left, \"right\": () => {Reveal.right()}, \"up\": Reveal.up, \"down\": Reveal.down, \"prev\": Reveal.prev, \"next\": Reveal.next, \"prevFragment\": Reveal.prevFragment, \"nextFragment\": Reveal.nextFragment, \"togglePause\": Reveal.togglePause, \"toggleAutoSlide\": Reveal.toggleAutoSlide, \"toggleHelp\": Reveal.toggleHelp, \"toggleOverview\": Reveal.toggleOverview, \"shuffle\": Reveal.shuffle}\n// const commandsWithArgs = {slide: Reveal.slide, togglePause: Reveal.togglePause, toggleAutoSlide: Reveal.toggleAutoSlide, toggleHelp: Reveal.toggleHelp, toggleOverview: Reveal.toggleOverview}\nvar defaultConfig={// The \"normal\" size of the presentation, aspect ratio will be preserved\n// when the presentation is scaled to fit different resolutions\nwidth:900,height:860,// Factor of the display size that should remain empty around the content\nmargin:0.05,// Bounds for smallest/largest possible scale to apply to content\nminScale:0.1,maxScale:3.0,// Help the user learn the controls by providing hints, for example by\n// bouncing the down arrow when they first encounter a vertical slide\ncontrolsTutorial:true,// Determines where controls appear, \"edges\" or \"bottom-right\"\ncontrolsLayout:'edges'};// This new component allows us to set the innerHTML of a div in a way \n// that allows code to be executed. THIS IS NOT SAFE. This is a workaround\n// for something that isnt allowed for a reason. The user of the `reveal_slides`\n// component is responsable for ensuring that the html (and js) they pass in is safe.\nvar DangerousDiv=function DangerousDiv(_ref){var html=_ref.html,innerRef=_ref.innerRef,rest=_objectWithoutProperties(_ref,_excluded);var divRef=useRef(null);useEffect(function(){if(!html)return;var newInnerHtml=document.createRange().createContextualFragment(html);// Create a 'tiny' document and parse the html string\ndivRef.current.innerHTML='';// Clear the container\ndivRef.current.appendChild(newInnerHtml);// Append the new content\n},[html]);return/*#__PURE__*/_jsx(\"div\",_objectSpread({ref:function ref(element){// This function passes the ref to the this div wrapper component\n// AND passes it to the innerRef prop which is used by the parent\n// of the wrapper component. This special handling allows for innerRef \n// to be a function or a ref object.\ndivRef.current=element;if(typeof innerRef==='function'){innerRef(element);}else{innerRef.current=element;}}},rest));};// RevealSlides is the main component.\nvar RevealSlides=function RevealSlides(_ref2){var args=_ref2.args,disabled=_ref2.disabled;var configStr=JSON.stringify(args[\"config\"]);var initStateStr=JSON.stringify(args[\"initial_state\"]);// const commandStr = JSON.stringify(args[\"commands\"])\n// This function takes the config object passed in from Streamlit and\n// adjusts it to work with the reveal.js api. The appropriate plugin module\n// is substituted in for each plugin name found in the 'plugins' attribute.\n// Markdown plugin is always included regardless if it is in the config object or not.\nvar setupConfig=function setupConfig(configString){var config=_objectSpread(_objectSpread({},defaultConfig),JSON.parse(configStr));// code to run after render goes here\nif(args[\"allow_unsafe_html\"]){if('plugins'in config){var arr=config['plugins'];arr.forEach(function(moduleName,index){if(moduleName in includedPlugins){arr[index]=includedPlugins[moduleName];}else{arr[index]=null;}});config['plugins']=arr.filter(function(x){return!!x;});}}else{if('plugins'in config){arr=config['plugins'];arr.forEach(function(moduleName,index){if(moduleName in includedPlugins){arr[index]=includedPlugins[moduleName];}else{arr[index]=null;}});config['plugins']=arr.filter(function(x){return!!x;});if(!config['plugins'].includes(RevealMarkdown)){config['plugins'].push(RevealMarkdown);}}else{config['plugins']=[RevealMarkdown];}}return config;};// This function handles `theme` changes. It imports the appropriate css file \n// according to the theme name passed in from Streamlit.\nuseMemo(function(){// To do: remove or disable previously imported css. When the list of\n// css imports exceed about 25, the page no longer updates.\n// NOTE: According to the webpack.config.js file found in the react-scripts node_module, \n// the style-loader is used in development mode and MiniCssExtractPlugin.loader is used in\n// production mode. This means that the css is injected into the page (by adding `<style>` \n// elements to header) in development mode and is extracted into a separate file \n// (and adding link elements to header with href pointing to files) in production mode.\n// It may be possible to alter settings/options to force these loaders to replace the css \n// added for previous themes with the css for the current.\nimport('../node_modules/reveal.js/dist/theme/'+args.theme+'.css').then(function(css){try{Reveal.layout();// Force the symbol-per-slide-progress plugin to update its colors if the plugin is loaded\nif(RevealSymbolPerSlideProgress&&\"externalPlugins\"in Reveal.getConfig()&&Reveal.getConfig().externalPlugins.includes(\"symbolperslideprogress\")){RevealSymbolPerSlideProgress.updateColors(Reveal.getConfig().symbolperslideprogress||{});RevealSymbolPerSlideProgress.updateNavigation();}}catch(e){console.warn(\"Reveal.layout() call failed.\");}// const tempList = Array.from(document.head.childNodes)\n// console.log(([] as ChildNode[]).concat(tempList))\n}).catch(function(err){console.warn(\"Failed CSS import: \",err);});},[args.theme]);// Initialize reveal.js\nuseEffect(function(){var config=setupConfig(configStr);try{Reveal.destroy();}catch(e){}Reveal.initialize(config).then(function(){// reveal.js is ready\n// For some yet to be determined reason, the highlight plugin is not initialized.\n// Setting highlight config option highlightOnLoad to true (before passing to initialize function)\n// does not work\n// To Do: make sure the highlight plugin only changes the HTML involving the code once instead of many times.\n// Possible solution is to make a change to the plugin init function.\nvar highlighter=Reveal.getPlugin('highlight');if(highlighter){highlighter.init(Reveal);}var initState=JSON.parse(initStateStr);if(Object.keys(initState).length!==0){Reveal.setState(initState);}if(\"externalPlugins\"in Reveal.getConfig()&&Reveal.getConfig().externalPlugins.includes(\"symbolperslideprogress\")){import('reveal.js-symbol-per-slide-progress').then(function(plugin){RevealSymbolPerSlideProgress=plugin.default;RevealSymbolPerSlideProgress.init(Reveal);});}if(!args['display_only']){// Send slide position indecies back to Streamlit on initialization and on slide change\nvar currState=Reveal.getState();Streamlit.setComponentValue(currState);Reveal.on('slidechanged',function(event){var tempState=Reveal.getState();Streamlit.setComponentValue({indexh:event.indexh,indexv:event.indexv,indexf:tempState.indexf,paused:tempState.paused,overview:tempState.overview});});Reveal.on('fragmentshown',function(event){// event.fragment = the fragment DOM element\nvar tempState=Reveal.getState();Streamlit.setComponentValue(tempState);});Reveal.on('fragmenthidden',function(event){// event.fragment = the fragment DOM element\nvar tempState=Reveal.getState();Streamlit.setComponentValue(tempState);});Reveal.on('overviewshown',function(event){// event.overview = the overview DOM element\nvar tempState=Reveal.getState();Streamlit.setComponentValue(tempState);});Reveal.on('overviewhidden',function(event){// event.overview = the overview DOM element\nvar tempState=Reveal.getState();Streamlit.setComponentValue(tempState);});Reveal.on('paused',function(event){// event.fragment = the fragment DOM element\nvar tempState=Reveal.getState();Streamlit.setComponentValue(tempState);});Reveal.on('resumed',function(event){// event.fragment = the fragment DOM element\nvar tempState=Reveal.getState();Streamlit.setComponentValue(tempState);});}});return function(){// code to run on component unmount goes here\nReveal.destroy();};},[]);// Reconfigure reveal.js if config changes\nuseEffect(function(){var existingPlugins=Reveal.getPlugins();var config=setupConfig(configStr);// Add and register plugins that are not already loaded\nvar existingPluginsList=Object.values(existingPlugins).map(function(plugin){return plugin.id;});if('plugins'in args[\"config\"]){var plugins=args[\"config\"][\"plugins\"];plugins.forEach(function(plugin){if(plugin&&existingPluginsList.indexOf(plugin)===-1){Reveal.registerPlugin(includedPlugins[plugin]);}});//// Remove plugins that are no longer in the list (does not work yet..some signs there is a bug in Reveal.Plugin)\n// Object.values(existingPlugins as {[id: string]: Reveal.Plugin;}).forEach((plugin: any) => {\n//   if (plugin.id && plugin.id !=='markdown' && plugins.indexOf(plugin.id) === -1){\n//     console.log(\"destroy plugin: \" + plugin.id);\n//     if( typeof plugin.destroy === 'function' ) {\n//       plugin.destroy();\n//     }\n//   }\n// });\n}// Reconfigure reveal.js\nReveal.configure(config);},[configStr,args[\"allow_unsafe_html\"]]);// When reveal.js is ready (after initialization or reconfiguration), \n// set the initial state if it is passed in from Streamlit.\nuseEffect(function(){var initState=JSON.parse(initStateStr);if(Reveal.isReady()&&Object.keys(initState).length!==0){Reveal.setState(initState);}},[initStateStr]);// Disable reveal.js if disabled is true\nuseEffect(function(){if(Reveal.isReady()){if(disabled){Reveal.togglePause(true);var viewport=Reveal.getViewportElement();if(viewport){viewport.style.pointerEvents=\"none\";}}else{Reveal.togglePause(false);var _viewport=Reveal.getViewportElement();if(_viewport){_viewport.style.pointerEvents=\"auto\";}}}},[disabled]);//To do: add support for commands (i.e. control slides from Streamlit)\n//--------------------------------------------------------------------\n/**\n   * resizeObserver observes changes in elements its given to observe and is used here\n   * to communicate to streamlit the height of the component that has changed\n   * so that streamlit can adjust the iframe containing the component accordingly.\n   */var resizeObserver=new ResizeObserver(function(entries){// If we know that the body will always fully contain our component (without cutting it off)\n// then we can use docuemnt.body height instead\nif(args[\"height\"]===\"auto\"||typeof args[\"height\"]!==\"number\"){var _entries$0$contentBox;Streamlit.setFrameHeight((_entries$0$contentBox=entries[0].contentBoxSize.blockSize)!==null&&_entries$0$contentBox!==void 0?_entries$0$contentBox:entries[0].contentRect.height);if(Reveal.isReady()){Reveal.layout();}}else{Streamlit.setFrameHeight(args[\"height\"]);if(Reveal.isReady()){Reveal.layout();}}});var observe=function observe(divElem){divElem?resizeObserver.observe(divElem):resizeObserver.disconnect();};if(args[\"allow_unsafe_html\"]){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GlobalCSS,{inject:args.css}),/*#__PURE__*/_jsx(DangerousDiv,{innerRef:observe,className:\"slides\",html:args[\"content\"]})]});}else{return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GlobalCSS,{inject:args.css}),/*#__PURE__*/_jsx(\"div\",{ref:observe,className:\"slides\",children:/*#__PURE__*/_jsx(\"section\",_objectSpread(_objectSpread({\"data-markdown\":\"\"},args[\"markdown_props\"]),{},{children:/*#__PURE__*/_jsx(\"script\",{type:\"text/template\",children:args[\"content\"]})}))})]});}};// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(RevealSlides);","map":{"version":3,"names":["Streamlit","withStreamlitConnection","useEffect","useMemo","useRef","Reveal","RevealMarkdown","RevealHighlight","RevealMath","RevealSearch","RevealNotes","RevealZoom","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","RevealSymbolPerSlideProgress","GlobalCSS","createGlobalStyle","props","inject","includedPlugins","KaTeX","MathJax2","MathJax3","defaultConfig","width","height","margin","minScale","maxScale","controlsTutorial","controlsLayout","DangerousDiv","_ref","html","innerRef","rest","_objectWithoutProperties","_excluded","divRef","newInnerHtml","document","createRange","createContextualFragment","current","innerHTML","appendChild","_objectSpread","ref","element","RevealSlides","_ref2","args","disabled","configStr","JSON","stringify","initStateStr","setupConfig","configString","config","parse","arr","forEach","moduleName","index","filter","x","includes","push","theme","then","css","layout","getConfig","externalPlugins","updateColors","symbolperslideprogress","updateNavigation","e","console","warn","catch","err","destroy","initialize","highlighter","getPlugin","init","initState","Object","keys","length","setState","plugin","default","currState","getState","setComponentValue","on","event","tempState","indexh","indexv","indexf","paused","overview","existingPlugins","getPlugins","existingPluginsList","values","map","id","plugins","indexOf","registerPlugin","configure","isReady","togglePause","viewport","getViewportElement","style","pointerEvents","resizeObserver","ResizeObserver","entries","_entries$0$contentBox","setFrameHeight","contentBoxSize","blockSize","contentRect","observe","divElem","disconnect","children","className","type"],"sources":["/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/src/RevealSlides.tsx"],"sourcesContent":["import {\n  Streamlit,\n  ComponentProps,\n  withStreamlitConnection,\n  Theme,\n} from \"streamlit-component-lib\"\nimport { MutableRefObject, useEffect, useMemo, useRef, lazy} from \"react\"\nimport { createGlobalStyle } from \"styled-components/macro\"\n\nimport Reveal from 'reveal.js';\nimport RevealMarkdown from 'reveal.js/plugin/markdown/markdown';\nimport RevealHighlight from 'reveal.js/plugin/highlight/highlight';\nimport RevealMath from 'reveal.js/plugin/math/math';\nimport RevealSearch from 'reveal.js/plugin/search/search';\nimport RevealNotes from 'reveal.js/plugin/notes/notes';\nimport RevealZoom from 'reveal.js/plugin/zoom/zoom';\n\nimport 'reveal.js/dist/reveal.css';\nimport 'reveal.js/plugin/highlight/monokai.css';\n\ninterface RevealSlidesProps extends ComponentProps {\n  args: any\n  width: number\n  disabled: boolean\n  theme?: Theme\n}\n\ninterface DangerousDivProps extends React.HTMLAttributes<HTMLDivElement> {\n  html: string;\n  innerRef: React.Ref<HTMLDivElement>;\n}\n\ntype SymbolPerSlideProgressType = {\n  id: string, \n  init: Function, \n  updateColors: Function, \n  updateNavigation: Function \n}\n\nlet RevealSymbolPerSlideProgress: SymbolPerSlideProgressType\n\nconst GlobalCSS = createGlobalStyle<{ inject: string}>`\n  ${props => props.inject}\n`\n\nconst includedPlugins = {\"markdown\": RevealMarkdown, \"highlight\": RevealHighlight, \"katex\": RevealMath.KaTeX, \"mathjax2\": RevealMath.MathJax2, \"mathjax3\": RevealMath.MathJax3, \"search\": RevealSearch, \"notes\": RevealNotes, \"zoom\": RevealZoom}\n// const simpleCommands = {\"left\": Reveal.left, \"right\": () => {Reveal.right()}, \"up\": Reveal.up, \"down\": Reveal.down, \"prev\": Reveal.prev, \"next\": Reveal.next, \"prevFragment\": Reveal.prevFragment, \"nextFragment\": Reveal.nextFragment, \"togglePause\": Reveal.togglePause, \"toggleAutoSlide\": Reveal.toggleAutoSlide, \"toggleHelp\": Reveal.toggleHelp, \"toggleOverview\": Reveal.toggleOverview, \"shuffle\": Reveal.shuffle}\n// const commandsWithArgs = {slide: Reveal.slide, togglePause: Reveal.togglePause, toggleAutoSlide: Reveal.toggleAutoSlide, toggleHelp: Reveal.toggleHelp, toggleOverview: Reveal.toggleOverview}\n\nconst defaultConfig = {\n  // The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 900,\n\theight: 860,\n\t\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.05,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.1,\n\tmaxScale: 3.0,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'edges',\n}\n\n// This new component allows us to set the innerHTML of a div in a way \n// that allows code to be executed. THIS IS NOT SAFE. This is a workaround\n// for something that isnt allowed for a reason. The user of the `reveal_slides`\n// component is responsable for ensuring that the html (and js) they pass in is safe.\nconst DangerousDiv = ({html, innerRef, ...rest}: DangerousDivProps) => {\n\n  const divRef = useRef<HTMLDivElement>(null);\n\n  useEffect(function () {\n    if (!html) return;\n\n    const newInnerHtml = document.createRange().createContextualFragment(html); // Create a 'tiny' document and parse the html string\n    divRef.current!.innerHTML = ''; // Clear the container\n    divRef.current!.appendChild(newInnerHtml); // Append the new content\n  }, [html]);\n\n  return (\n    <div \n      ref={(element) => {\n        // This function passes the ref to the this div wrapper component\n        // AND passes it to the innerRef prop which is used by the parent\n        // of the wrapper component. This special handling allows for innerRef \n        // to be a function or a ref object.\n        (divRef as MutableRefObject<HTMLDivElement>).current = element as HTMLDivElement\n        if (typeof innerRef === 'function') {\n          innerRef(element)\n        }\n        else {\n          (innerRef as MutableRefObject<HTMLDivElement>).current = element as HTMLDivElement\n        }\n      }} \n      {...rest} />\n  )\n}\n\n// RevealSlides is the main component.\nconst RevealSlides = ({ args, disabled }: RevealSlidesProps) => {   \n\n  let configStr = JSON.stringify(args[\"config\"])\n  let initStateStr = JSON.stringify(args[\"initial_state\"])\n  // const commandStr = JSON.stringify(args[\"commands\"])\n\n  // This function takes the config object passed in from Streamlit and\n  // adjusts it to work with the reveal.js api. The appropriate plugin module\n  // is substituted in for each plugin name found in the 'plugins' attribute.\n  // Markdown plugin is always included regardless if it is in the config object or not.\n  const setupConfig = (configString: string) : object => {\n    const config = {...defaultConfig, ...JSON.parse(configStr)}\n    // code to run after render goes here\n    if (args[\"allow_unsafe_html\"]) {\n      if ('plugins' in config){\n        var arr = config['plugins'];\n        arr.forEach(function(moduleName: string, index: number) {\n          if (moduleName in includedPlugins){\n            arr[index] = (includedPlugins as any)[moduleName];\n          }\n          else {\n            arr[index] = null;\n          }\n        });\n        config['plugins'] = arr.filter((x:any) => !!x) as any[];\n      }\n    }\n    else {\n      if ('plugins' in config){\n        arr = config['plugins'];\n        arr.forEach(function(moduleName: string, index: number) {\n          if (moduleName in includedPlugins){\n            arr[index] = (includedPlugins as any)[moduleName];\n          }\n          else {\n            arr[index] = null;\n          }\n        });\n        config['plugins'] = arr.filter((x:any) => !!x) as any[];\n        if(!config['plugins'].includes(RevealMarkdown)){\n          config['plugins'].push(RevealMarkdown);\n        }\n      }\n      else {\n        config['plugins'] = [RevealMarkdown];\n      }\n    }\n    return config;\n  }\n\n  // This function handles `theme` changes. It imports the appropriate css file \n  // according to the theme name passed in from Streamlit.\n  useMemo(()=>{\n    // To do: remove or disable previously imported css. When the list of\n    // css imports exceed about 25, the page no longer updates.\n    // NOTE: According to the webpack.config.js file found in the react-scripts node_module, \n    // the style-loader is used in development mode and MiniCssExtractPlugin.loader is used in\n    // production mode. This means that the css is injected into the page (by adding `<style>` \n    // elements to header) in development mode and is extracted into a separate file \n    // (and adding link elements to header with href pointing to files) in production mode.\n    // It may be possible to alter settings/options to force these loaders to replace the css \n    // added for previous themes with the css for the current.\n    import('../node_modules/reveal.js/dist/theme/' + args.theme + '.css').then((css) => {\n      try{\n        Reveal.layout();\n\n        // Force the symbol-per-slide-progress plugin to update its colors if the plugin is loaded\n        if( RevealSymbolPerSlideProgress && \"externalPlugins\" in (Reveal.getConfig() as any) && ((Reveal.getConfig() as any).externalPlugins as string[]).includes(\"symbolperslideprogress\")){ \n          RevealSymbolPerSlideProgress.updateColors((Reveal.getConfig() as any).symbolperslideprogress || {});\n          RevealSymbolPerSlideProgress.updateNavigation()\n        }\n      }\n      catch (e){\n        console.warn(\"Reveal.layout() call failed.\")\n      }\n\n      // const tempList = Array.from(document.head.childNodes)\n      // console.log(([] as ChildNode[]).concat(tempList))\n    }).catch((err) => {\n      console.warn(\"Failed CSS import: \", err);\n    });\n\n  }, [args.theme]);\n\n  // Initialize reveal.js\n  useEffect(() => {\n    const config = setupConfig(configStr)\n    \n    try {\n      Reveal.destroy();\n    }\n    catch (e) {\n    }\n    Reveal.initialize(config).then(() => {\n      // reveal.js is ready\n      \n      // For some yet to be determined reason, the highlight plugin is not initialized.\n      // Setting highlight config option highlightOnLoad to true (before passing to initialize function)\n      // does not work\n      // To Do: make sure the highlight plugin only changes the HTML involving the code once instead of many times.\n      // Possible solution is to make a change to the plugin init function.\n      let highlighter = Reveal.getPlugin('highlight') as any;\n      if (highlighter){\n        highlighter.init(Reveal);\n      }\n      \n      const initState = JSON.parse(initStateStr);\n      if(Object.keys(initState).length !== 0){\n        Reveal.setState(initState);\n      }\n\n      if(\"externalPlugins\" in (Reveal.getConfig() as any) && ((Reveal.getConfig() as any).externalPlugins as string[]).includes(\"symbolperslideprogress\")){\n        import('reveal.js-symbol-per-slide-progress').then((plugin) => {\n          RevealSymbolPerSlideProgress = plugin.default\n          RevealSymbolPerSlideProgress.init(Reveal);\n        });        \n      }\n\n      if(!args['display_only']){\n        // Send slide position indecies back to Streamlit on initialization and on slide change\n        const currState = Reveal.getState();\n        Streamlit.setComponentValue(currState);\n        Reveal.on( 'slidechanged', event => {\n\n          const tempState = Reveal.getState();\n          Streamlit.setComponentValue({indexh: (event as any).indexh, indexv: (event as any).indexv, indexf: tempState.indexf, paused: tempState.paused, overview: tempState.overview});\n        });\n        \n        Reveal.on( 'fragmentshown', event => {\n          // event.fragment = the fragment DOM element\n          const tempState = Reveal.getState();\n          Streamlit.setComponentValue(tempState);\n        } );\n        Reveal.on( 'fragmenthidden', event => {\n          // event.fragment = the fragment DOM element\n          const tempState = Reveal.getState();\n          Streamlit.setComponentValue(tempState);\n        } );\n        Reveal.on( 'overviewshown', event => {\n          // event.overview = the overview DOM element\n          const tempState = Reveal.getState();\n          Streamlit.setComponentValue(tempState);\n        } );\n        Reveal.on( 'overviewhidden', event => {\n          // event.overview = the overview DOM element\n          const tempState = Reveal.getState();\n          Streamlit.setComponentValue(tempState);\n        } );\n        Reveal.on( 'paused', event => {\n          // event.fragment = the fragment DOM element\n          const tempState = Reveal.getState();\n          Streamlit.setComponentValue(tempState);\n        } );\n        Reveal.on( 'resumed', event => {\n          // event.fragment = the fragment DOM element\n          const tempState = Reveal.getState();\n          Streamlit.setComponentValue(tempState);\n        } );\n      }\n\n    });\n\n    return () => {\n      // code to run on component unmount goes here\n      Reveal.destroy();  \n    }\n  }, []);\n\n  // Reconfigure reveal.js if config changes\n  useEffect(() => {\n    const existingPlugins = Reveal.getPlugins();\n    const config = setupConfig(configStr)\n\n    // Add and register plugins that are not already loaded\n    let existingPluginsList : string[] = Object.values(existingPlugins).map((plugin: any) => plugin.id);\n    if('plugins' in args[\"config\"]){\n      const plugins = args[\"config\"][\"plugins\"];\n      (plugins as string[]).forEach((plugin: string) => {\n        if (plugin && existingPluginsList.indexOf(plugin) === -1){\n          Reveal.registerPlugin((includedPlugins as any)[plugin]);\n        }\n      });\n\n      //// Remove plugins that are no longer in the list (does not work yet..some signs there is a bug in Reveal.Plugin)\n      // Object.values(existingPlugins as {[id: string]: Reveal.Plugin;}).forEach((plugin: any) => {\n      //   if (plugin.id && plugin.id !=='markdown' && plugins.indexOf(plugin.id) === -1){\n      //     console.log(\"destroy plugin: \" + plugin.id);\n      //     if( typeof plugin.destroy === 'function' ) {\n      //       plugin.destroy();\n      //     }\n      //   }\n      // });\n    }\n    // Reconfigure reveal.js\n    Reveal.configure(config);\n  }, [configStr, args[\"allow_unsafe_html\"]]);\n\n  // When reveal.js is ready (after initialization or reconfiguration), \n  // set the initial state if it is passed in from Streamlit.\n  useEffect(() => {\n    const initState = JSON.parse(initStateStr);\n    if (Reveal.isReady() && Object.keys(initState).length !== 0){\n      Reveal.setState(initState);\n    }\n  }, [initStateStr]);\n\n  // Disable reveal.js if disabled is true\n  useEffect(() => {\n    if (Reveal.isReady()){\n      if (disabled){\n        Reveal.togglePause(true);\n        let viewport = Reveal.getViewportElement();\n        if (viewport){\n          viewport.style.pointerEvents = \"none\";\n        }\n      }\n      else {  \n        Reveal.togglePause(false);\n        let viewport = Reveal.getViewportElement();\n        if (viewport){\n          viewport.style.pointerEvents = \"auto\";\n        }\n      }\n    }\n  }, [disabled]);\n\n  //To do: add support for commands (i.e. control slides from Streamlit)\n  //--------------------------------------------------------------------\n\n  /**\n   * resizeObserver observes changes in elements its given to observe and is used here\n   * to communicate to streamlit the height of the component that has changed\n   * so that streamlit can adjust the iframe containing the component accordingly.\n   */\n  const resizeObserver = new ResizeObserver((entries: any) => {\n    // If we know that the body will always fully contain our component (without cutting it off)\n    // then we can use docuemnt.body height instead\n    if (args[\"height\"] === \"auto\" || typeof args[\"height\"] !== \"number\"){\n      Streamlit.setFrameHeight((entries[0].contentBoxSize.blockSize ?? entries[0].contentRect.height)); \n      if (Reveal.isReady()){\n        Reveal.layout();\n      }\n    }\n    else {\n      Streamlit.setFrameHeight(args[\"height\"]);\n      if (Reveal.isReady()){\n        Reveal.layout();\n      }\n    }\n    \n  })\n\n  const observe = (divElem: any) => {\n    divElem ? resizeObserver.observe(divElem as HTMLDivElement) : resizeObserver.disconnect();\n  }\n\n  if (args[\"allow_unsafe_html\"]) {\n    return (\n      <>\n        <GlobalCSS inject={args.css}/>\n        <DangerousDiv innerRef={observe} className=\"slides\" html={args[\"content\"]} />\n      </>\n    )\n  }\n  else {\n    return (\n      <>\n        <GlobalCSS inject={args.css}/>\n        <div ref={observe} className=\"slides\">\n          <section data-markdown={\"\"} {...args[\"markdown_props\"]}>\n            <script type={\"text/template\"}>\n              {args[\"content\"]}\n            </script>\n          </section>\n        </div>\n      </>\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(RevealSlides)"],"mappings":"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"},"metadata":{},"sourceType":"module"}