{"ast":null,"code":"import _defineProperty from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _classCallCheck from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar _excluded = [\"readableStrategy\", \"writableStrategy\", \"queueingStrategy\"];\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Builder } from '../../builder/index';\n/** @ignore */\nexport function builderThroughDOMStream(options) {\n  return new BuilderTransform(options);\n}\n/** @ignore */\nexport var BuilderTransform = /*#__PURE__*/function () {\n  function BuilderTransform(options) {\n    var _this = this,\n      _ReadableStream,\n      _WritableStream;\n    _classCallCheck(this, BuilderTransform);\n    // Access properties by string indexers to defeat closure compiler\n    this._numChunks = 0;\n    this._finished = false;\n    this._bufferedSize = 0;\n    var readableStrategy = options['readableStrategy'],\n      writableStrategy = options['writableStrategy'],\n      _options$queueingStra = options['queueingStrategy'],\n      queueingStrategy = _options$queueingStra === void 0 ? 'count' : _options$queueingStra,\n      builderOptions = _objectWithoutProperties(options, _excluded);\n    this._controller = null;\n    this._builder = Builder.new(builderOptions);\n    this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n    var _readableStrategy = _objectSpread({}, readableStrategy),\n      _readableStrategy$hig = _readableStrategy['highWaterMark'],\n      readableHighWaterMark = _readableStrategy$hig === void 0 ? queueingStrategy === 'bytes' ? Math.pow(2, 14) : 1000 : _readableStrategy$hig;\n    var _writableStrategy = _objectSpread({}, writableStrategy),\n      _writableStrategy$hig = _writableStrategy['highWaterMark'],\n      writableHighWaterMark = _writableStrategy$hig === void 0 ? queueingStrategy === 'bytes' ? Math.pow(2, 14) : 1000 : _writableStrategy$hig;\n    this['readable'] = new ReadableStream((_ReadableStream = {}, _defineProperty(_ReadableStream, 'cancel', function cancel() {\n      _this._builder.clear();\n    }), _defineProperty(_ReadableStream, 'pull', function pull(c) {\n      _this._maybeFlush(_this._builder, _this._controller = c);\n    }), _defineProperty(_ReadableStream, 'start', function start(c) {\n      _this._maybeFlush(_this._builder, _this._controller = c);\n    }), _ReadableStream), {\n      'highWaterMark': readableHighWaterMark,\n      'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength\n    });\n    this['writable'] = new WritableStream((_WritableStream = {}, _defineProperty(_WritableStream, 'abort', function abort() {\n      _this._builder.clear();\n    }), _defineProperty(_WritableStream, 'write', function write() {\n      _this._maybeFlush(_this._builder, _this._controller);\n    }), _defineProperty(_WritableStream, 'close', function close() {\n      _this._maybeFlush(_this._builder.finish(), _this._controller);\n    }), _WritableStream), {\n      'highWaterMark': writableHighWaterMark,\n      'size': function size(value) {\n        return _this._writeValueAndReturnChunkSize(value);\n      }\n    });\n  }\n  _createClass(BuilderTransform, [{\n    key: \"_writeValueAndReturnChunkSize\",\n    value: function _writeValueAndReturnChunkSize(value) {\n      var bufferedSize = this._bufferedSize;\n      this._bufferedSize = this._getSize(this._builder.append(value));\n      return this._bufferedSize - bufferedSize;\n    }\n  }, {\n    key: \"_maybeFlush\",\n    value: function _maybeFlush(builder, controller) {\n      if (controller === null) {\n        return;\n      }\n      if (this._bufferedSize >= controller.desiredSize) {\n        ++this._numChunks && this._enqueue(controller, builder.toVector());\n      }\n      if (builder.finished) {\n        if (builder.length > 0 || this._numChunks === 0) {\n          ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (!this._finished && (this._finished = true)) {\n          this._enqueue(controller, null);\n        }\n      }\n    }\n  }, {\n    key: \"_enqueue\",\n    value: function _enqueue(controller, chunk) {\n      this._bufferedSize = 0;\n      this._controller = null;\n      chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n  }]);\n  return BuilderTransform;\n}();\n/** @ignore */\nvar chunkLength = function chunkLength(chunk) {\n  return chunk.length;\n};\n/** @ignore */\nvar chunkByteLength = function chunkByteLength(chunk) {\n  return chunk.byteLength;\n};","map":{"version":3,"names":["Builder","builderThroughDOMStream","options","BuilderTransform","_this","_ReadableStream","_WritableStream","_classCallCheck","_numChunks","_finished","_bufferedSize","readableStrategy","writableStrategy","_options$queueingStra","queueingStrategy","builderOptions","_objectWithoutProperties","_excluded","_controller","_builder","new","_getSize","chunkLength","chunkByteLength","_readableStrategy","_objectSpread","_readableStrategy$hig","readableHighWaterMark","Math","pow","_writableStrategy","_writableStrategy$hig","writableHighWaterMark","ReadableStream","_defineProperty","cancel","clear","pull","c","_maybeFlush","start","WritableStream","abort","write","close","finish","size","value","_writeValueAndReturnChunkSize","_createClass","key","bufferedSize","append","builder","controller","desiredSize","_enqueue","toVector","finished","length","chunk","enqueue","byteLength"],"sources":["io/whatwg/builder.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}