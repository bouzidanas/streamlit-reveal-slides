{"ast":null,"code":"import _classCallCheck from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { Dictionary } from '../type';\n/** @ignore */\nexport var DictionaryVector = /*#__PURE__*/function (_BaseVector) {\n  _inherits(DictionaryVector, _BaseVector);\n  var _super = _createSuper(DictionaryVector);\n  function DictionaryVector(data) {\n    var _this;\n    _classCallCheck(this, DictionaryVector);\n    _this = _super.call(this, data);\n    _this.indices = Vector.new(data.clone(_this.type.indices));\n    return _this;\n  }\n  /** @nocollapse */\n  _createClass(DictionaryVector, [{\n    key: \"dictionary\",\n    get: function get() {\n      return this.data.dictionary;\n    }\n  }, {\n    key: \"reverseLookup\",\n    value: function reverseLookup(value) {\n      return this.dictionary.indexOf(value);\n    }\n  }, {\n    key: \"getKey\",\n    value: function getKey(idx) {\n      return this.indices.get(idx);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(key) {\n      return this.dictionary.get(key);\n    }\n  }, {\n    key: \"setKey\",\n    value: function setKey(idx, key) {\n      return this.indices.set(idx, key);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(key, value) {\n      return this.dictionary.set(key, value);\n    }\n  }], [{\n    key: \"from\",\n    value: function from() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      if (args.length === 3) {\n        var values = args[0],\n          indices = args[1],\n          keys = args[2];\n        var type = new Dictionary(values.type, indices, null, null);\n        return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n      }\n      return vectorFromValuesWithType(function () {\n        return args[0].type;\n      }, args[0]);\n    }\n  }]);\n  return DictionaryVector;\n}(BaseVector);\nDictionaryVector.prototype.indices = null;","map":{"version":3,"names":["Data","Vector","BaseVector","vectorFromValuesWithType","Dictionary","DictionaryVector","_BaseVector","_inherits","_super","_createSuper","data","_this","_classCallCheck","call","indices","new","clone","type","_createClass","key","get","dictionary","value","reverseLookup","indexOf","getKey","idx","getValue","setKey","set","setValue","from","_len","arguments","length","args","Array","_key","values","keys","prototype"],"sources":["vector/dictionary.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}