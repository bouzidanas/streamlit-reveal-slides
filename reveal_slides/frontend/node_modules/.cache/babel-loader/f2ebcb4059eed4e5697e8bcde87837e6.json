{"ast":null,"code":"import _classCallCheck from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/* istanbul ignore file */\nimport { Visitor } from '../visitor';\nimport { TimeUnit } from '../enum';\n/** @ignore */\nvar sum = function sum(x, y) {\n  return x + y;\n};\n/** @ignore */\nvar variableWidthColumnErrorMessage = function variableWidthColumnErrorMessage(type) {\n  return \"Cannot compute the byte width of variable-width column \".concat(type);\n};\n/** @ignore */\nexport var ByteWidthVisitor = /*#__PURE__*/function (_Visitor) {\n  _inherits(ByteWidthVisitor, _Visitor);\n  var _super = _createSuper(ByteWidthVisitor);\n  function ByteWidthVisitor() {\n    _classCallCheck(this, ByteWidthVisitor);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ByteWidthVisitor, [{\n    key: \"visitNull\",\n    value: function visitNull(____) {\n      return 0;\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt(type) {\n      return type.bitWidth / 8;\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat(type) {\n      return type.ArrayType.BYTES_PER_ELEMENT;\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary(type) {\n      throw new Error(variableWidthColumnErrorMessage(type));\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8(type) {\n      throw new Error(variableWidthColumnErrorMessage(type));\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool(____) {\n      return 1 / 8;\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal(____) {\n      return 16;\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate(type) {\n      return (type.unit + 1) * 4;\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime(type) {\n      return type.bitWidth / 8;\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp(type) {\n      return type.unit === TimeUnit.SECOND ? 4 : 8;\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval(type) {\n      return (type.unit + 1) * 4;\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList(type) {\n      throw new Error(variableWidthColumnErrorMessage(type));\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct(type) {\n      return this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion(type) {\n      return this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary(type) {\n      return type.byteWidth;\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList(type) {\n      return type.listSize * this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap(type) {\n      return this.visitFields(type.children).reduce(sum, 0);\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary(type) {\n      return this.visit(type.indices);\n    }\n  }, {\n    key: \"visitFields\",\n    value: function visitFields(fields) {\n      var _this = this;\n      return (fields || []).map(function (field) {\n        return _this.visit(field.type);\n      });\n    }\n  }, {\n    key: \"visitSchema\",\n    value: function visitSchema(schema) {\n      return this.visitFields(schema.fields).reduce(sum, 0);\n    }\n  }]);\n  return ByteWidthVisitor;\n}(Visitor);\n/** @ignore */\nexport var instance = new ByteWidthVisitor();","map":{"version":3,"names":["Visitor","TimeUnit","sum","x","y","variableWidthColumnErrorMessage","type","concat","ByteWidthVisitor","_Visitor","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","visitNull","____","visitInt","bitWidth","visitFloat","ArrayType","BYTES_PER_ELEMENT","visitBinary","Error","visitUtf8","visitBool","visitDecimal","visitDate","unit","visitTime","visitTimestamp","SECOND","visitInterval","visitList","visitStruct","visitFields","children","reduce","visitUnion","visitFixedSizeBinary","byteWidth","visitFixedSizeList","listSize","visitMap","visitDictionary","visit","indices","fields","_this","map","field","visitSchema","schema","instance"],"sources":["visitor/bytewidth.ts"],"sourcesContent":["/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}