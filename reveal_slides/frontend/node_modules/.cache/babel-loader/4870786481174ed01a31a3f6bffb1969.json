{"ast":null,"code":"import _objectSpread from\"/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{Streamlit,withStreamlitConnection}from\"streamlit-component-lib\";import{useEffect}from\"react\";import Reveal from'reveal.js';import RevealMarkdown from'reveal.js/plugin/markdown/markdown';import RevealHighlight from'reveal.js/plugin/highlight/highlight';import RevealMath from'reveal.js/plugin/math/math';import RevealSearch from'reveal.js/plugin/search/search';import RevealNotes from'reveal.js/plugin/notes/notes';import RevealZoom from'reveal.js/plugin/zoom/zoom';import'reveal.js/dist/reveal.css';import'reveal.js/plugin/highlight/monokai.css';import{jsx as _jsx}from\"react/jsx-runtime\";var includedPlugins={\"RevealMarkdown\":RevealMarkdown,\"RevealHighlight\":RevealHighlight,\"RevealMath.KaTeX\":RevealMath.KaTeX,\"RevealMath.MathJax2\":RevealMath.MathJax2,\"RevealMath.MathJax3\":RevealMath.MathJax3,\"RevealSearch\":RevealSearch,\"RevealNotes\":RevealNotes,\"RevealZoom\":RevealZoom};// const simpleCommands = {\"left\": Reveal.left, \"right\": () => {Reveal.right()}, \"up\": Reveal.up, \"down\": Reveal.down, \"prev\": Reveal.prev, \"next\": Reveal.next, \"prevFragment\": Reveal.prevFragment, \"nextFragment\": Reveal.nextFragment, \"togglePause\": Reveal.togglePause, \"toggleAutoSlide\": Reveal.toggleAutoSlide, \"toggleHelp\": Reveal.toggleHelp, \"toggleOverview\": Reveal.toggleOverview, \"shuffle\": Reveal.shuffle}\n// const commandsWithArgs = {slide: Reveal.slide, togglePause: Reveal.togglePause, toggleAutoSlide: Reveal.toggleAutoSlide, toggleHelp: Reveal.toggleHelp, toggleOverview: Reveal.toggleOverview}\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */var RevealSlides=function RevealSlides(_ref){var args=_ref.args,disabled=_ref.disabled;var configStr=JSON.stringify(args[\"config\"]);// const commandStr = JSON.stringify(args[\"commands\"])\nuseEffect(function(){// code to run on component mount goes here\nimport('../node_modules/reveal.js/dist/theme/'+args.theme+'.css');},[args.theme]);useEffect(function(){var config=JSON.parse(configStr);// code to run after render goes here\nif(args[\"allow_unsafe_html\"]){// do nothing\n}else{if('plugins'in config){var arr=config['plugins'];arr.forEach(function(moduleName,index){if(moduleName in includedPlugins){arr[index]=includedPlugins[moduleName];}else{arr[index]=null;}});config['plugins']=arr.filter(function(x){return!!x;});if(!config['plugins'].includes(RevealMarkdown)){config['plugins'].push(RevealMarkdown);}}else{config['plugins']=[RevealMarkdown];}}Reveal.initialize(config).then(function(){// reveal.js is ready\n// For some yet to be determined reason, the highlight plugin is not initialized.\n// Setting highlight config option highlightOnLoad to true (before passing to initialize function)\n// does not work\nvar highlighter=Reveal.getPlugin('highlight');if(highlighter){highlighter.init(Reveal);}// Send slide position indecies back to Streamlit on initialization and on slide change\nvar index=Reveal.getIndices();Streamlit.setComponentValue({indexh:index.h,indexv:index.v});Reveal.on('slidechanged',function(event){Streamlit.setComponentValue({indexh:event.indexh,indexv:event.indexv});});});return function(){// code to run on component unmount goes here\nReveal.destroy();};},[configStr,args[\"allow_unsafe_html\"]]);useEffect(function(){if(Reveal.isReady()){if(disabled){Reveal.togglePause(true);var viewport=Reveal.getViewportElement();if(viewport){viewport.style.pointerEvents=\"none\";viewport.style.cursor=\"not-allowed\";viewport.style.opacity=\"0.5\";}}else{Reveal.togglePause(false);var _viewport=Reveal.getViewportElement();if(_viewport){_viewport.style.pointerEvents=\"auto\";_viewport.style.cursor=\"auto\";_viewport.style.opacity=\"1\";}}}},[disabled]);//To do: add support for commands (i.e. control slides from Streamlit)\n//-----------------\n// useEffect(() => {\n//   const commands = JSON.parse(commandStr)\n//   if (Array.isArray(commands) && commands.length > 0 && Reveal.isReady()){\n//     commands.forEach((command: any) => {\n//       if (typeof command === \"string\" && command in simpleCommands){\n//         (simpleCommands as any)[command]();\n//       }\n//       else if (Array.isArray(command) && command.length > 0 && typeof command[0] === \"string\" && command[0] in commandsWithArgs){\n//         if (command[0] === \"slide\"){\n//           if (command.length === 3){\n//             Reveal.slide(command[1], command[2]);\n//           }\n//           else if (command.length === 4){\n//             Reveal.slide(command[1], command[2], command[3]);\n//           }\n//           else {\n//             console.warn(\"Invalid slide command: slide command array must have 3 or 4 elements.\");\n//           }\n//         }\n//         else {\n//           (commandsWithArgs as any)[command[0]](command[1]);\n//         }\n//       }\n//       else {\n//         console.warn(\"Invalid command: command must be a string or an array containing a string as its first element.\");\n//       }\n//     });\n//   }\n//   else if (!Array.isArray(args[\"commands\"])) {\n//     console.warn(\"Invalid commands property value: commands must be an array containing at least one command.\");\n//   }\n// }, [commandStr]);\n/**\n   * resizeObserver observes changes in elements its given to observe and is used here\n   * to communicate to streamlit the height of the component that has changed\n   * so that streamlit can adjust the iframe containing the component accordingly.\n   */var resizeObserver=new ResizeObserver(function(entries){// If we know that the body will always fully contain our component (without cutting it off)\n// then we can use docuemnt.body height instead\nif(args[\"height\"]===\"auto\"||typeof args[\"height\"]!==\"number\"){var _entries$0$contentBox;Streamlit.setFrameHeight((_entries$0$contentBox=entries[0].contentBoxSize.blockSize)!==null&&_entries$0$contentBox!==void 0?_entries$0$contentBox:entries[0].contentRect.height);if(Reveal.isReady()){Reveal.layout();}}else{Streamlit.setFrameHeight(args[\"height\"]);if(Reveal.isReady()){Reveal.layout();}}});var observe=function observe(divElem){divElem?resizeObserver.observe(divElem):resizeObserver.disconnect();};if(args[\"allow_unsafe_html\"]){return/*#__PURE__*/_jsx(\"div\",{ref:observe,className:\"slides\",dangerouslySetInnerHTML:{__html:args[\"content\"]}});}else{return/*#__PURE__*/_jsx(\"div\",{ref:observe,className:\"slides\",children:/*#__PURE__*/_jsx(\"section\",_objectSpread(_objectSpread({\"data-markdown\":\"\"},args[\"markdown_props\"]),{},{children:/*#__PURE__*/_jsx(\"script\",{type:\"text/template\",children:args[\"content\"]})}))});}};// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(RevealSlides);","map":{"version":3,"names":["Streamlit","withStreamlitConnection","useEffect","Reveal","RevealMarkdown","RevealHighlight","RevealMath","RevealSearch","RevealNotes","RevealZoom","jsx","_jsx","includedPlugins","KaTeX","MathJax2","MathJax3","RevealSlides","_ref","args","disabled","configStr","JSON","stringify","theme","config","parse","arr","forEach","moduleName","index","filter","x","includes","push","initialize","then","highlighter","getPlugin","init","getIndices","setComponentValue","indexh","h","indexv","v","on","event","destroy","isReady","togglePause","viewport","getViewportElement","style","pointerEvents","cursor","opacity","resizeObserver","ResizeObserver","entries","_entries$0$contentBox","setFrameHeight","contentBoxSize","blockSize","contentRect","height","layout","observe","divElem","disconnect","ref","className","dangerouslySetInnerHTML","__html","children","_objectSpread","type"],"sources":["/home/anasbouzid/streamlit/streamlit.io/streamlit-reveal-slides/reveal_slides/frontend/src/RevealSlides.tsx"],"sourcesContent":["import {\n  Streamlit,\n  ComponentProps,\n  withStreamlitConnection,\n  Theme,\n} from \"streamlit-component-lib\"\nimport { useEffect } from \"react\"\n\n\nimport Reveal from 'reveal.js';\nimport RevealMarkdown from 'reveal.js/plugin/markdown/markdown';\nimport RevealHighlight from 'reveal.js/plugin/highlight/highlight';\nimport RevealMath from 'reveal.js/plugin/math/math';\nimport RevealSearch from 'reveal.js/plugin/search/search';\nimport RevealNotes from 'reveal.js/plugin/notes/notes';\nimport RevealZoom from 'reveal.js/plugin/zoom/zoom';\n\n\nimport 'reveal.js/dist/reveal.css';\nimport 'reveal.js/plugin/highlight/monokai.css';\n\ninterface RevealSlidesProps extends ComponentProps {\n  args: any\n  width: number\n  disabled: boolean\n  theme?: Theme\n}\n\nconst includedPlugins = {\"RevealMarkdown\": RevealMarkdown, \"RevealHighlight\": RevealHighlight, \"RevealMath.KaTeX\": RevealMath.KaTeX, \"RevealMath.MathJax2\": RevealMath.MathJax2, \"RevealMath.MathJax3\": RevealMath.MathJax3, \"RevealSearch\": RevealSearch, \"RevealNotes\": RevealNotes, \"RevealZoom\": RevealZoom}\n// const simpleCommands = {\"left\": Reveal.left, \"right\": () => {Reveal.right()}, \"up\": Reveal.up, \"down\": Reveal.down, \"prev\": Reveal.prev, \"next\": Reveal.next, \"prevFragment\": Reveal.prevFragment, \"nextFragment\": Reveal.nextFragment, \"togglePause\": Reveal.togglePause, \"toggleAutoSlide\": Reveal.toggleAutoSlide, \"toggleHelp\": Reveal.toggleHelp, \"toggleOverview\": Reveal.toggleOverview, \"shuffle\": Reveal.shuffle}\n// const commandsWithArgs = {slide: Reveal.slide, togglePause: Reveal.togglePause, toggleAutoSlide: Reveal.toggleAutoSlide, toggleHelp: Reveal.toggleHelp, toggleOverview: Reveal.toggleOverview}\n\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nconst RevealSlides = ({ args, disabled }: RevealSlidesProps) => {  \n  \n  const configStr = JSON.stringify(args[\"config\"])\n\n  // const commandStr = JSON.stringify(args[\"commands\"])\n\n  useEffect(() => {\n    // code to run on component mount goes here\n    import('../node_modules/reveal.js/dist/theme/' + args.theme + '.css')\n  }, [args.theme]);\n\n  useEffect(() => {\n    const config = JSON.parse(configStr)\n    // code to run after render goes here\n    if (args[\"allow_unsafe_html\"]) {\n      // do nothing\n    }\n    else {\n      if ('plugins' in config){\n        var arr = config['plugins'];\n        arr.forEach(function(moduleName: string, index: number) {\n          if (moduleName in includedPlugins){\n            arr[index] = (includedPlugins as any)[moduleName];\n          }\n          else {\n            arr[index] = null;\n          }\n        });\n        config['plugins'] = arr.filter((x:any) => !!x) as any[];\n        if(!config['plugins'].includes(RevealMarkdown)){\n          config['plugins'].push(RevealMarkdown);\n        }\n      }\n      else {\n        config['plugins'] = [RevealMarkdown];\n      }\n    }\n    Reveal.initialize(config).then(() => {\n      // reveal.js is ready\n\n      // For some yet to be determined reason, the highlight plugin is not initialized.\n      // Setting highlight config option highlightOnLoad to true (before passing to initialize function)\n      // does not work\n      let highlighter = Reveal.getPlugin('highlight') as any;\n      if (highlighter){\n        highlighter.init(Reveal);\n      } \n\n      // Send slide position indecies back to Streamlit on initialization and on slide change\n      const index = Reveal.getIndices();\n      Streamlit.setComponentValue({indexh: index.h, indexv: index.v});\n      Reveal.on( 'slidechanged', event => {\n        Streamlit.setComponentValue({indexh: (event as any).indexh, indexv: (event as any).indexv});\n      });\n    });\n\n    return () => {\n      // code to run on component unmount goes here\n      Reveal.destroy();  \n    }\n  }, [configStr, args[\"allow_unsafe_html\"]]);\n\n  useEffect(() => {\n    if (Reveal.isReady()){\n      if (disabled){\n        Reveal.togglePause(true);\n        let viewport = Reveal.getViewportElement();\n        if (viewport){\n          viewport.style.pointerEvents = \"none\";\n          viewport.style.cursor = \"not-allowed\";\n          viewport.style.opacity = \"0.5\";\n        }\n      }\n      else {  \n        Reveal.togglePause(false);\n        let viewport = Reveal.getViewportElement();\n        if (viewport){\n          viewport.style.pointerEvents = \"auto\";\n          viewport.style.cursor = \"auto\";\n          viewport.style.opacity = \"1\";\n        }\n      }\n    }\n  }, [disabled]);\n\n  //To do: add support for commands (i.e. control slides from Streamlit)\n  //-----------------\n  // useEffect(() => {\n  //   const commands = JSON.parse(commandStr)\n  //   if (Array.isArray(commands) && commands.length > 0 && Reveal.isReady()){\n  //     commands.forEach((command: any) => {\n  //       if (typeof command === \"string\" && command in simpleCommands){\n  //         (simpleCommands as any)[command]();\n  //       }\n  //       else if (Array.isArray(command) && command.length > 0 && typeof command[0] === \"string\" && command[0] in commandsWithArgs){\n  //         if (command[0] === \"slide\"){\n  //           if (command.length === 3){\n  //             Reveal.slide(command[1], command[2]);\n  //           }\n  //           else if (command.length === 4){\n  //             Reveal.slide(command[1], command[2], command[3]);\n  //           }\n  //           else {\n  //             console.warn(\"Invalid slide command: slide command array must have 3 or 4 elements.\");\n  //           }\n  //         }\n  //         else {\n  //           (commandsWithArgs as any)[command[0]](command[1]);\n  //         }\n  //       }\n  //       else {\n  //         console.warn(\"Invalid command: command must be a string or an array containing a string as its first element.\");\n  //       }\n  //     });\n  //   }\n  //   else if (!Array.isArray(args[\"commands\"])) {\n  //     console.warn(\"Invalid commands property value: commands must be an array containing at least one command.\");\n  //   }\n  // }, [commandStr]);\n\n  /**\n   * resizeObserver observes changes in elements its given to observe and is used here\n   * to communicate to streamlit the height of the component that has changed\n   * so that streamlit can adjust the iframe containing the component accordingly.\n   */\n  const resizeObserver = new ResizeObserver((entries: any) => {\n    // If we know that the body will always fully contain our component (without cutting it off)\n    // then we can use docuemnt.body height instead\n    if (args[\"height\"] === \"auto\" || typeof args[\"height\"] !== \"number\"){\n      Streamlit.setFrameHeight((entries[0].contentBoxSize.blockSize ?? entries[0].contentRect.height)); \n      if (Reveal.isReady()){\n        Reveal.layout();\n      }\n    }\n    else {\n      Streamlit.setFrameHeight(args[\"height\"]);\n      if (Reveal.isReady()){\n        Reveal.layout();\n      }\n    }\n    \n  })\n\n  const observe = (divElem: any) => {\n    divElem ? resizeObserver.observe(divElem as HTMLDivElement) : resizeObserver.disconnect();\n  }\n\n  if (args[\"allow_unsafe_html\"]) {\n    return (\n      <div ref={observe} className=\"slides\" dangerouslySetInnerHTML={{__html: args[\"content\"]}}>\n      </div>\n    )\n  }\n  else {\n    return (\n      <div ref={observe} className=\"slides\">\n        <section data-markdown={\"\"} {...args[\"markdown_props\"]}>\n          <script type={\"text/template\"}>\n          {args[\"content\"]}\n          </script>\n        </section>\n      </div>\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(RevealSlides)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}