{"ast":null,"code":"import _toConsumableArray from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { AbstractVector, Vector } from '../vector';\n/** @ignore */\nexport var BaseVector = /*#__PURE__*/function (_AbstractVector, _Symbol$toStringTag) {\n  _inherits(BaseVector, _AbstractVector);\n  var _super = _createSuper(BaseVector);\n  function BaseVector(data, children) {\n    var _this;\n    _classCallCheck(this, BaseVector);\n    _this = _super.call(this);\n    _this._children = children;\n    _this.numChildren = data.childData.length;\n    _this._bindDataAccessors(_this.data = data);\n    return _this;\n  }\n  _createClass(BaseVector, [{\n    key: \"type\",\n    get: function get() {\n      return this.data.type;\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return this.data.typeId;\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.data.length;\n    }\n  }, {\n    key: \"offset\",\n    get: function get() {\n      return this.data.offset;\n    }\n  }, {\n    key: \"stride\",\n    get: function get() {\n      return this.data.stride;\n    }\n  }, {\n    key: \"nullCount\",\n    get: function get() {\n      return this.data.nullCount;\n    }\n  }, {\n    key: \"byteLength\",\n    get: function get() {\n      return this.data.byteLength;\n    }\n  }, {\n    key: \"VectorName\",\n    get: function get() {\n      return \"\".concat(Type[this.typeId], \"Vector\");\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return this.type.ArrayType;\n    }\n  }, {\n    key: \"values\",\n    get: function get() {\n      return this.data.values;\n    }\n  }, {\n    key: \"typeIds\",\n    get: function get() {\n      return this.data.typeIds;\n    }\n  }, {\n    key: \"nullBitmap\",\n    get: function get() {\n      return this.data.nullBitmap;\n    }\n  }, {\n    key: \"valueOffsets\",\n    get: function get() {\n      return this.data.valueOffsets;\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return \"\".concat(this.VectorName, \"<\").concat(this.type[Symbol.toStringTag], \">\");\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(data) {\n      var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._children;\n      return Vector.new(data, children);\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      for (var _len = arguments.length, others = new Array(_len), _key = 0; _key < _len; _key++) {\n        others[_key] = arguments[_key];\n      }\n      return Chunked.concat.apply(Chunked, [this].concat(others));\n    }\n  }, {\n    key: \"slice\",\n    value: function slice(begin, end) {\n      // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n      // clamp between 0 and length, and wrap around on negative indices, e.g.\n      // slice(-1, 5) or slice(5, -1)\n      return clampRange(this, begin, end, this._sliceInternal);\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(index) {\n      if (this.nullCount > 0) {\n        var idx = this.offset + index;\n        var val = this.nullBitmap[idx >> 3];\n        var mask = val & 1 << idx % 8;\n        return mask !== 0;\n      }\n      return true;\n    }\n  }, {\n    key: \"getChildAt\",\n    value: function getChildAt(index) {\n      return index < 0 || index >= this.numChildren ? null : (this._children || (this._children = []))[index] || (this._children[index] = Vector.new(this.data.childData[index]));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return _toConsumableArray(this);\n    }\n  }, {\n    key: \"_sliceInternal\",\n    value: function _sliceInternal(self, begin, end) {\n      return self.clone(self.data.slice(begin, end - begin), null);\n    }\n    // @ts-ignore\n  }, {\n    key: \"_bindDataAccessors\",\n    value: function _bindDataAccessors(data) {\n      // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n  }]);\n  return BaseVector;\n}(AbstractVector, Symbol.toStringTag);\nBaseVector.prototype[Symbol.isConcatSpreadable] = true;","map":{"version":3,"names":["Type","Chunked","clampRange","AbstractVector","Vector","BaseVector","_AbstractVector","_Symbol$toStringTag","_inherits","_super","_createSuper","data","children","_this","_classCallCheck","call","_children","numChildren","childData","length","_bindDataAccessors","_createClass","key","get","type","typeId","offset","stride","nullCount","byteLength","concat","ArrayType","values","typeIds","nullBitmap","valueOffsets","VectorName","Symbol","toStringTag","value","clone","arguments","undefined","new","_len","others","Array","_key","apply","slice","begin","end","_sliceInternal","isValid","index","idx","val","mask","getChildAt","toJSON","_toConsumableArray","self","prototype","isConcatSpreadable"],"sources":["vector/base.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}