{"ast":null,"code":"import _inherits from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/anasbouzid/streamlit-reveal-slides/reveal_slides/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { instance as comparer } from './visitor/typecomparator';\nimport { Type, Precision, UnionMode, DateUnit, TimeUnit, IntervalUnit } from './enum';\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport var DataType = /*#__PURE__*/function () {\n  function DataType() {\n    _classCallCheck(this, DataType);\n  }\n  _createClass(DataType, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.NONE;\n    }\n  }, {\n    key: \"compareTo\",\n    value: function compareTo(other) {\n      return comparer.visit(this, other);\n    }\n  }], [{\n    key: \"isNull\",\n    value: /** @nocollapse */function isNull(x) {\n      return x && x.typeId === Type.Null;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isInt\",\n    value: function isInt(x) {\n      return x && x.typeId === Type.Int;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isFloat\",\n    value: function isFloat(x) {\n      return x && x.typeId === Type.Float;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isBinary\",\n    value: function isBinary(x) {\n      return x && x.typeId === Type.Binary;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isUtf8\",\n    value: function isUtf8(x) {\n      return x && x.typeId === Type.Utf8;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isBool\",\n    value: function isBool(x) {\n      return x && x.typeId === Type.Bool;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isDecimal\",\n    value: function isDecimal(x) {\n      return x && x.typeId === Type.Decimal;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isDate\",\n    value: function isDate(x) {\n      return x && x.typeId === Type.Date;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isTime\",\n    value: function isTime(x) {\n      return x && x.typeId === Type.Time;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isTimestamp\",\n    value: function isTimestamp(x) {\n      return x && x.typeId === Type.Timestamp;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isInterval\",\n    value: function isInterval(x) {\n      return x && x.typeId === Type.Interval;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isList\",\n    value: function isList(x) {\n      return x && x.typeId === Type.List;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isStruct\",\n    value: function isStruct(x) {\n      return x && x.typeId === Type.Struct;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isUnion\",\n    value: function isUnion(x) {\n      return x && x.typeId === Type.Union;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isFixedSizeBinary\",\n    value: function isFixedSizeBinary(x) {\n      return x && x.typeId === Type.FixedSizeBinary;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isFixedSizeList\",\n    value: function isFixedSizeList(x) {\n      return x && x.typeId === Type.FixedSizeList;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isMap\",\n    value: function isMap(x) {\n      return x && x.typeId === Type.Map;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isDictionary\",\n    value: function isDictionary(x) {\n      return x && x.typeId === Type.Dictionary;\n    }\n  }]);\n  return DataType;\n}();\nDataType[Symbol.toStringTag] = function (proto) {\n  proto.children = null;\n  proto.ArrayType = Array;\n  return proto[Symbol.toStringTag] = 'DataType';\n}(DataType.prototype);\n/** @ignore */\nexport var Null = /*#__PURE__*/function (_DataType) {\n  _inherits(Null, _DataType);\n  var _super = _createSuper(Null);\n  function Null() {\n    _classCallCheck(this, Null);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Null, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Null\";\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Null;\n    }\n  }]);\n  return Null;\n}(DataType);\nNull[Symbol.toStringTag] = function (proto) {\n  return proto[Symbol.toStringTag] = 'Null';\n}(Null.prototype);\n/** @ignore */\nvar Int_ = /*#__PURE__*/function (_DataType2) {\n  _inherits(Int_, _DataType2);\n  var _super2 = _createSuper(Int_);\n  function Int_(isSigned, bitWidth) {\n    var _this;\n    _classCallCheck(this, Int_);\n    _this = _super2.call(this);\n    _this.isSigned = isSigned;\n    _this.bitWidth = bitWidth;\n    return _this;\n  }\n  _createClass(Int_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Int;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      switch (this.bitWidth) {\n        case 8:\n          return this.isSigned ? Int8Array : Uint8Array;\n        case 16:\n          return this.isSigned ? Int16Array : Uint16Array;\n        case 32:\n          return this.isSigned ? Int32Array : Uint32Array;\n        case 64:\n          return this.isSigned ? Int32Array : Uint32Array;\n      }\n      throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag], \" type\"));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.isSigned ? \"I\" : \"Ui\", \"nt\").concat(this.bitWidth);\n    }\n  }]);\n  return Int_;\n}(DataType);\nInt_[Symbol.toStringTag] = function (proto) {\n  proto.isSigned = null;\n  proto.bitWidth = null;\n  return proto[Symbol.toStringTag] = 'Int';\n}(Int_.prototype);\nexport { Int_ as Int };\n/** @ignore */\nexport var Int8 = /*#__PURE__*/function (_Int_) {\n  _inherits(Int8, _Int_);\n  var _super3 = _createSuper(Int8);\n  function Int8() {\n    _classCallCheck(this, Int8);\n    return _super3.call(this, true, 8);\n  }\n  return _createClass(Int8);\n}(Int_);\n/** @ignore */\nexport var Int16 = /*#__PURE__*/function (_Int_2) {\n  _inherits(Int16, _Int_2);\n  var _super4 = _createSuper(Int16);\n  function Int16() {\n    _classCallCheck(this, Int16);\n    return _super4.call(this, true, 16);\n  }\n  return _createClass(Int16);\n}(Int_);\n/** @ignore */\nexport var Int32 = /*#__PURE__*/function (_Int_3) {\n  _inherits(Int32, _Int_3);\n  var _super5 = _createSuper(Int32);\n  function Int32() {\n    _classCallCheck(this, Int32);\n    return _super5.call(this, true, 32);\n  }\n  return _createClass(Int32);\n}(Int_);\n/** @ignore */\nexport var Int64 = /*#__PURE__*/function (_Int_4) {\n  _inherits(Int64, _Int_4);\n  var _super6 = _createSuper(Int64);\n  function Int64() {\n    _classCallCheck(this, Int64);\n    return _super6.call(this, true, 64);\n  }\n  return _createClass(Int64);\n}(Int_);\n/** @ignore */\nexport var Uint8 = /*#__PURE__*/function (_Int_5) {\n  _inherits(Uint8, _Int_5);\n  var _super7 = _createSuper(Uint8);\n  function Uint8() {\n    _classCallCheck(this, Uint8);\n    return _super7.call(this, false, 8);\n  }\n  return _createClass(Uint8);\n}(Int_);\n/** @ignore */\nexport var Uint16 = /*#__PURE__*/function (_Int_6) {\n  _inherits(Uint16, _Int_6);\n  var _super8 = _createSuper(Uint16);\n  function Uint16() {\n    _classCallCheck(this, Uint16);\n    return _super8.call(this, false, 16);\n  }\n  return _createClass(Uint16);\n}(Int_);\n/** @ignore */\nexport var Uint32 = /*#__PURE__*/function (_Int_7) {\n  _inherits(Uint32, _Int_7);\n  var _super9 = _createSuper(Uint32);\n  function Uint32() {\n    _classCallCheck(this, Uint32);\n    return _super9.call(this, false, 32);\n  }\n  return _createClass(Uint32);\n}(Int_);\n/** @ignore */\nexport var Uint64 = /*#__PURE__*/function (_Int_8) {\n  _inherits(Uint64, _Int_8);\n  var _super10 = _createSuper(Uint64);\n  function Uint64() {\n    _classCallCheck(this, Uint64);\n    return _super10.call(this, false, 64);\n  }\n  return _createClass(Uint64);\n}(Int_);\nObject.defineProperty(Int8.prototype, 'ArrayType', {\n  value: Int8Array\n});\nObject.defineProperty(Int16.prototype, 'ArrayType', {\n  value: Int16Array\n});\nObject.defineProperty(Int32.prototype, 'ArrayType', {\n  value: Int32Array\n});\nObject.defineProperty(Int64.prototype, 'ArrayType', {\n  value: Int32Array\n});\nObject.defineProperty(Uint8.prototype, 'ArrayType', {\n  value: Uint8Array\n});\nObject.defineProperty(Uint16.prototype, 'ArrayType', {\n  value: Uint16Array\n});\nObject.defineProperty(Uint32.prototype, 'ArrayType', {\n  value: Uint32Array\n});\nObject.defineProperty(Uint64.prototype, 'ArrayType', {\n  value: Uint32Array\n});\n/** @ignore */\nexport var Float = /*#__PURE__*/function (_DataType3) {\n  _inherits(Float, _DataType3);\n  var _super11 = _createSuper(Float);\n  function Float(precision) {\n    var _this2;\n    _classCallCheck(this, Float);\n    _this2 = _super11.call(this);\n    _this2.precision = precision;\n    return _this2;\n  }\n  _createClass(Float, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Float;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      switch (this.precision) {\n        case Precision.HALF:\n          return Uint16Array;\n        case Precision.SINGLE:\n          return Float32Array;\n        case Precision.DOUBLE:\n          return Float64Array;\n      }\n      throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag], \" type\"));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Float\".concat(this.precision << 5 || 16);\n    }\n  }]);\n  return Float;\n}(DataType);\nFloat[Symbol.toStringTag] = function (proto) {\n  proto.precision = null;\n  return proto[Symbol.toStringTag] = 'Float';\n}(Float.prototype);\n/** @ignore */\nexport var Float16 = /*#__PURE__*/function (_Float) {\n  _inherits(Float16, _Float);\n  var _super12 = _createSuper(Float16);\n  function Float16() {\n    _classCallCheck(this, Float16);\n    return _super12.call(this, Precision.HALF);\n  }\n  return _createClass(Float16);\n}(Float);\n/** @ignore */\nexport var Float32 = /*#__PURE__*/function (_Float2) {\n  _inherits(Float32, _Float2);\n  var _super13 = _createSuper(Float32);\n  function Float32() {\n    _classCallCheck(this, Float32);\n    return _super13.call(this, Precision.SINGLE);\n  }\n  return _createClass(Float32);\n}(Float);\n/** @ignore */\nexport var Float64 = /*#__PURE__*/function (_Float3) {\n  _inherits(Float64, _Float3);\n  var _super14 = _createSuper(Float64);\n  function Float64() {\n    _classCallCheck(this, Float64);\n    return _super14.call(this, Precision.DOUBLE);\n  }\n  return _createClass(Float64);\n}(Float);\nObject.defineProperty(Float16.prototype, 'ArrayType', {\n  value: Uint16Array\n});\nObject.defineProperty(Float32.prototype, 'ArrayType', {\n  value: Float32Array\n});\nObject.defineProperty(Float64.prototype, 'ArrayType', {\n  value: Float64Array\n});\n/** @ignore */\nexport var Binary = /*#__PURE__*/function (_DataType4) {\n  _inherits(Binary, _DataType4);\n  var _super15 = _createSuper(Binary);\n  function Binary() {\n    _classCallCheck(this, Binary);\n    return _super15.call(this);\n  }\n  _createClass(Binary, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Binary;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Binary\";\n    }\n  }]);\n  return Binary;\n}(DataType);\nBinary[Symbol.toStringTag] = function (proto) {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Binary';\n}(Binary.prototype);\n/** @ignore */\nexport var Utf8 = /*#__PURE__*/function (_DataType5) {\n  _inherits(Utf8, _DataType5);\n  var _super16 = _createSuper(Utf8);\n  function Utf8() {\n    _classCallCheck(this, Utf8);\n    return _super16.call(this);\n  }\n  _createClass(Utf8, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Utf8;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Utf8\";\n    }\n  }]);\n  return Utf8;\n}(DataType);\nUtf8[Symbol.toStringTag] = function (proto) {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Utf8';\n}(Utf8.prototype);\n/** @ignore */\nexport var Bool = /*#__PURE__*/function (_DataType6) {\n  _inherits(Bool, _DataType6);\n  var _super17 = _createSuper(Bool);\n  function Bool() {\n    _classCallCheck(this, Bool);\n    return _super17.call(this);\n  }\n  _createClass(Bool, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Bool;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Bool\";\n    }\n  }]);\n  return Bool;\n}(DataType);\nBool[Symbol.toStringTag] = function (proto) {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Bool';\n}(Bool.prototype);\n/** @ignore */\nexport var Decimal = /*#__PURE__*/function (_DataType7) {\n  _inherits(Decimal, _DataType7);\n  var _super18 = _createSuper(Decimal);\n  function Decimal(scale, precision) {\n    var _this3;\n    _classCallCheck(this, Decimal);\n    _this3 = _super18.call(this);\n    _this3.scale = scale;\n    _this3.precision = precision;\n    return _this3;\n  }\n  _createClass(Decimal, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Decimal;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Decimal[\".concat(this.precision, \"e\").concat(this.scale > 0 ? \"+\" : \"\").concat(this.scale, \"]\");\n    }\n  }]);\n  return Decimal;\n}(DataType);\nDecimal[Symbol.toStringTag] = function (proto) {\n  proto.scale = null;\n  proto.precision = null;\n  proto.ArrayType = Uint32Array;\n  return proto[Symbol.toStringTag] = 'Decimal';\n}(Decimal.prototype);\n/** @ignore */\nexport var Date_ = /*#__PURE__*/function (_DataType8) {\n  _inherits(Date_, _DataType8);\n  var _super19 = _createSuper(Date_);\n  function Date_(unit) {\n    var _this4;\n    _classCallCheck(this, Date_);\n    _this4 = _super19.call(this);\n    _this4.unit = unit;\n    return _this4;\n  }\n  _createClass(Date_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Date;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Date\".concat((this.unit + 1) * 32, \"<\").concat(DateUnit[this.unit], \">\");\n    }\n  }]);\n  return Date_;\n}(DataType);\nDate_[Symbol.toStringTag] = function (proto) {\n  proto.unit = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Date';\n}(Date_.prototype);\n/** @ignore */\nexport var DateDay = /*#__PURE__*/function (_Date_) {\n  _inherits(DateDay, _Date_);\n  var _super20 = _createSuper(DateDay);\n  function DateDay() {\n    _classCallCheck(this, DateDay);\n    return _super20.call(this, DateUnit.DAY);\n  }\n  return _createClass(DateDay);\n}(Date_);\n/** @ignore */\nexport var DateMillisecond = /*#__PURE__*/function (_Date_2) {\n  _inherits(DateMillisecond, _Date_2);\n  var _super21 = _createSuper(DateMillisecond);\n  function DateMillisecond() {\n    _classCallCheck(this, DateMillisecond);\n    return _super21.call(this, DateUnit.MILLISECOND);\n  }\n  return _createClass(DateMillisecond);\n}(Date_);\n/** @ignore */\nvar Time_ = /*#__PURE__*/function (_DataType9) {\n  _inherits(Time_, _DataType9);\n  var _super22 = _createSuper(Time_);\n  function Time_(unit, bitWidth) {\n    var _this5;\n    _classCallCheck(this, Time_);\n    _this5 = _super22.call(this);\n    _this5.unit = unit;\n    _this5.bitWidth = bitWidth;\n    return _this5;\n  }\n  _createClass(Time_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Time;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Time\".concat(this.bitWidth, \"<\").concat(TimeUnit[this.unit], \">\");\n    }\n  }]);\n  return Time_;\n}(DataType);\nTime_[Symbol.toStringTag] = function (proto) {\n  proto.unit = null;\n  proto.bitWidth = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Time';\n}(Time_.prototype);\nexport { Time_ as Time };\n/** @ignore */\nexport var TimeSecond = /*#__PURE__*/function (_Time_) {\n  _inherits(TimeSecond, _Time_);\n  var _super23 = _createSuper(TimeSecond);\n  function TimeSecond() {\n    _classCallCheck(this, TimeSecond);\n    return _super23.call(this, TimeUnit.SECOND, 32);\n  }\n  return _createClass(TimeSecond);\n}(Time_);\n/** @ignore */\nexport var TimeMillisecond = /*#__PURE__*/function (_Time_2) {\n  _inherits(TimeMillisecond, _Time_2);\n  var _super24 = _createSuper(TimeMillisecond);\n  function TimeMillisecond() {\n    _classCallCheck(this, TimeMillisecond);\n    return _super24.call(this, TimeUnit.MILLISECOND, 32);\n  }\n  return _createClass(TimeMillisecond);\n}(Time_);\n/** @ignore */\nexport var TimeMicrosecond = /*#__PURE__*/function (_Time_3) {\n  _inherits(TimeMicrosecond, _Time_3);\n  var _super25 = _createSuper(TimeMicrosecond);\n  function TimeMicrosecond() {\n    _classCallCheck(this, TimeMicrosecond);\n    return _super25.call(this, TimeUnit.MICROSECOND, 64);\n  }\n  return _createClass(TimeMicrosecond);\n}(Time_);\n/** @ignore */\nexport var TimeNanosecond = /*#__PURE__*/function (_Time_4) {\n  _inherits(TimeNanosecond, _Time_4);\n  var _super26 = _createSuper(TimeNanosecond);\n  function TimeNanosecond() {\n    _classCallCheck(this, TimeNanosecond);\n    return _super26.call(this, TimeUnit.NANOSECOND, 64);\n  }\n  return _createClass(TimeNanosecond);\n}(Time_);\n/** @ignore */\nvar Timestamp_ = /*#__PURE__*/function (_DataType10) {\n  _inherits(Timestamp_, _DataType10);\n  var _super27 = _createSuper(Timestamp_);\n  function Timestamp_(unit, timezone) {\n    var _this6;\n    _classCallCheck(this, Timestamp_);\n    _this6 = _super27.call(this);\n    _this6.unit = unit;\n    _this6.timezone = timezone;\n    return _this6;\n  }\n  _createClass(Timestamp_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Timestamp;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp<\".concat(TimeUnit[this.unit]).concat(this.timezone ? \", \".concat(this.timezone) : \"\", \">\");\n    }\n  }]);\n  return Timestamp_;\n}(DataType);\nTimestamp_[Symbol.toStringTag] = function (proto) {\n  proto.unit = null;\n  proto.timezone = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Timestamp';\n}(Timestamp_.prototype);\nexport { Timestamp_ as Timestamp };\n/** @ignore */\nexport var TimestampSecond = /*#__PURE__*/function (_Timestamp_) {\n  _inherits(TimestampSecond, _Timestamp_);\n  var _super28 = _createSuper(TimestampSecond);\n  function TimestampSecond(timezone) {\n    _classCallCheck(this, TimestampSecond);\n    return _super28.call(this, TimeUnit.SECOND, timezone);\n  }\n  return _createClass(TimestampSecond);\n}(Timestamp_);\n/** @ignore */\nexport var TimestampMillisecond = /*#__PURE__*/function (_Timestamp_2) {\n  _inherits(TimestampMillisecond, _Timestamp_2);\n  var _super29 = _createSuper(TimestampMillisecond);\n  function TimestampMillisecond(timezone) {\n    _classCallCheck(this, TimestampMillisecond);\n    return _super29.call(this, TimeUnit.MILLISECOND, timezone);\n  }\n  return _createClass(TimestampMillisecond);\n}(Timestamp_);\n/** @ignore */\nexport var TimestampMicrosecond = /*#__PURE__*/function (_Timestamp_3) {\n  _inherits(TimestampMicrosecond, _Timestamp_3);\n  var _super30 = _createSuper(TimestampMicrosecond);\n  function TimestampMicrosecond(timezone) {\n    _classCallCheck(this, TimestampMicrosecond);\n    return _super30.call(this, TimeUnit.MICROSECOND, timezone);\n  }\n  return _createClass(TimestampMicrosecond);\n}(Timestamp_);\n/** @ignore */\nexport var TimestampNanosecond = /*#__PURE__*/function (_Timestamp_4) {\n  _inherits(TimestampNanosecond, _Timestamp_4);\n  var _super31 = _createSuper(TimestampNanosecond);\n  function TimestampNanosecond(timezone) {\n    _classCallCheck(this, TimestampNanosecond);\n    return _super31.call(this, TimeUnit.NANOSECOND, timezone);\n  }\n  return _createClass(TimestampNanosecond);\n}(Timestamp_);\n/** @ignore */\nvar Interval_ = /*#__PURE__*/function (_DataType11) {\n  _inherits(Interval_, _DataType11);\n  var _super32 = _createSuper(Interval_);\n  function Interval_(unit) {\n    var _this7;\n    _classCallCheck(this, Interval_);\n    _this7 = _super32.call(this);\n    _this7.unit = unit;\n    return _this7;\n  }\n  _createClass(Interval_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Interval;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Interval<\".concat(IntervalUnit[this.unit], \">\");\n    }\n  }]);\n  return Interval_;\n}(DataType);\nInterval_[Symbol.toStringTag] = function (proto) {\n  proto.unit = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Interval';\n}(Interval_.prototype);\nexport { Interval_ as Interval };\n/** @ignore */\nexport var IntervalDayTime = /*#__PURE__*/function (_Interval_) {\n  _inherits(IntervalDayTime, _Interval_);\n  var _super33 = _createSuper(IntervalDayTime);\n  function IntervalDayTime() {\n    _classCallCheck(this, IntervalDayTime);\n    return _super33.call(this, IntervalUnit.DAY_TIME);\n  }\n  return _createClass(IntervalDayTime);\n}(Interval_);\n/** @ignore */\nexport var IntervalYearMonth = /*#__PURE__*/function (_Interval_2) {\n  _inherits(IntervalYearMonth, _Interval_2);\n  var _super34 = _createSuper(IntervalYearMonth);\n  function IntervalYearMonth() {\n    _classCallCheck(this, IntervalYearMonth);\n    return _super34.call(this, IntervalUnit.YEAR_MONTH);\n  }\n  return _createClass(IntervalYearMonth);\n}(Interval_);\n/** @ignore */\nexport var List = /*#__PURE__*/function (_DataType12) {\n  _inherits(List, _DataType12);\n  var _super35 = _createSuper(List);\n  function List(child) {\n    var _this8;\n    _classCallCheck(this, List);\n    _this8 = _super35.call(this);\n    _this8.children = [child];\n    return _this8;\n  }\n  _createClass(List, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.List;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"List<\".concat(this.valueType, \">\");\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.children[0].type;\n    }\n  }, {\n    key: \"valueField\",\n    get: function get() {\n      return this.children[0];\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return this.valueType.ArrayType;\n    }\n  }]);\n  return List;\n}(DataType);\nList[Symbol.toStringTag] = function (proto) {\n  proto.children = null;\n  return proto[Symbol.toStringTag] = 'List';\n}(List.prototype);\n/** @ignore */\nexport var Struct = /*#__PURE__*/function (_DataType13) {\n  _inherits(Struct, _DataType13);\n  var _super36 = _createSuper(Struct);\n  function Struct(children) {\n    var _this9;\n    _classCallCheck(this, Struct);\n    _this9 = _super36.call(this);\n    _this9.children = children;\n    return _this9;\n  }\n  _createClass(Struct, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Struct;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Struct<{\".concat(this.children.map(function (f) {\n        return \"\".concat(f.name, \":\").concat(f.type);\n      }).join(\", \"), \"}>\");\n    }\n  }]);\n  return Struct;\n}(DataType);\nStruct[Symbol.toStringTag] = function (proto) {\n  proto.children = null;\n  return proto[Symbol.toStringTag] = 'Struct';\n}(Struct.prototype);\n/** @ignore */\nvar Union_ = /*#__PURE__*/function (_DataType14) {\n  _inherits(Union_, _DataType14);\n  var _super37 = _createSuper(Union_);\n  function Union_(mode, typeIds, children) {\n    var _this10;\n    _classCallCheck(this, Union_);\n    _this10 = _super37.call(this);\n    _this10.mode = mode;\n    _this10.children = children;\n    _this10.typeIds = typeIds = Int32Array.from(typeIds);\n    _this10.typeIdToChildIndex = typeIds.reduce(function (typeIdToChildIndex, typeId, idx) {\n      return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n    }, Object.create(null));\n    return _this10;\n  }\n  _createClass(Union_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Union;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this[Symbol.toStringTag], \"<\").concat(this.children.map(function (x) {\n        return \"\".concat(x.type);\n      }).join(\" | \"), \">\");\n    }\n  }]);\n  return Union_;\n}(DataType);\nUnion_[Symbol.toStringTag] = function (proto) {\n  proto.mode = null;\n  proto.typeIds = null;\n  proto.children = null;\n  proto.typeIdToChildIndex = null;\n  proto.ArrayType = Int8Array;\n  return proto[Symbol.toStringTag] = 'Union';\n}(Union_.prototype);\nexport { Union_ as Union };\n/** @ignore */\nexport var DenseUnion = /*#__PURE__*/function (_Union_) {\n  _inherits(DenseUnion, _Union_);\n  var _super38 = _createSuper(DenseUnion);\n  function DenseUnion(typeIds, children) {\n    _classCallCheck(this, DenseUnion);\n    return _super38.call(this, UnionMode.Dense, typeIds, children);\n  }\n  return _createClass(DenseUnion);\n}(Union_);\n/** @ignore */\nexport var SparseUnion = /*#__PURE__*/function (_Union_2) {\n  _inherits(SparseUnion, _Union_2);\n  var _super39 = _createSuper(SparseUnion);\n  function SparseUnion(typeIds, children) {\n    _classCallCheck(this, SparseUnion);\n    return _super39.call(this, UnionMode.Sparse, typeIds, children);\n  }\n  return _createClass(SparseUnion);\n}(Union_);\n/** @ignore */\nexport var FixedSizeBinary = /*#__PURE__*/function (_DataType15) {\n  _inherits(FixedSizeBinary, _DataType15);\n  var _super40 = _createSuper(FixedSizeBinary);\n  function FixedSizeBinary(byteWidth) {\n    var _this11;\n    _classCallCheck(this, FixedSizeBinary);\n    _this11 = _super40.call(this);\n    _this11.byteWidth = byteWidth;\n    return _this11;\n  }\n  _createClass(FixedSizeBinary, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.FixedSizeBinary;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"FixedSizeBinary[\".concat(this.byteWidth, \"]\");\n    }\n  }]);\n  return FixedSizeBinary;\n}(DataType);\nFixedSizeBinary[Symbol.toStringTag] = function (proto) {\n  proto.byteWidth = null;\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n}(FixedSizeBinary.prototype);\n/** @ignore */\nexport var FixedSizeList = /*#__PURE__*/function (_DataType16) {\n  _inherits(FixedSizeList, _DataType16);\n  var _super41 = _createSuper(FixedSizeList);\n  function FixedSizeList(listSize, child) {\n    var _this12;\n    _classCallCheck(this, FixedSizeList);\n    _this12 = _super41.call(this);\n    _this12.listSize = listSize;\n    _this12.children = [child];\n    return _this12;\n  }\n  _createClass(FixedSizeList, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.FixedSizeList;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.children[0].type;\n    }\n  }, {\n    key: \"valueField\",\n    get: function get() {\n      return this.children[0];\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return this.valueType.ArrayType;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"FixedSizeList[\".concat(this.listSize, \"]<\").concat(this.valueType, \">\");\n    }\n  }]);\n  return FixedSizeList;\n}(DataType);\nFixedSizeList[Symbol.toStringTag] = function (proto) {\n  proto.children = null;\n  proto.listSize = null;\n  return proto[Symbol.toStringTag] = 'FixedSizeList';\n}(FixedSizeList.prototype);\n/** @ignore */\nexport var Map_ = /*#__PURE__*/function (_DataType17) {\n  _inherits(Map_, _DataType17);\n  var _super42 = _createSuper(Map_);\n  function Map_(child) {\n    var _this13;\n    var keysSorted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    _classCallCheck(this, Map_);\n    _this13 = _super42.call(this);\n    _this13.children = [child];\n    _this13.keysSorted = keysSorted;\n    return _this13;\n  }\n  _createClass(Map_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Map;\n    }\n  }, {\n    key: \"keyType\",\n    get: function get() {\n      return this.children[0].type.children[0].type;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.children[0].type.children[1].type;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Map<{\".concat(this.children[0].type.children.map(function (f) {\n        return \"\".concat(f.name, \":\").concat(f.type);\n      }).join(\", \"), \"}>\");\n    }\n  }]);\n  return Map_;\n}(DataType);\nMap_[Symbol.toStringTag] = function (proto) {\n  proto.children = null;\n  proto.keysSorted = null;\n  return proto[Symbol.toStringTag] = 'Map_';\n}(Map_.prototype);\n/** @ignore */\nvar getId = function (atomicDictionaryId) {\n  return function () {\n    return ++atomicDictionaryId;\n  };\n}(-1);\n/** @ignore */\nexport var Dictionary = /*#__PURE__*/function (_DataType18) {\n  _inherits(Dictionary, _DataType18);\n  var _super43 = _createSuper(Dictionary);\n  function Dictionary(dictionary, indices, id, isOrdered) {\n    var _this14;\n    _classCallCheck(this, Dictionary);\n    _this14 = _super43.call(this);\n    _this14.indices = indices;\n    _this14.dictionary = dictionary;\n    _this14.isOrdered = isOrdered || false;\n    _this14.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    return _this14;\n  }\n  _createClass(Dictionary, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Dictionary;\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this.dictionary.children;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.dictionary;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return this.dictionary.ArrayType;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Dictionary<\".concat(this.indices, \", \").concat(this.dictionary, \">\");\n    }\n  }]);\n  return Dictionary;\n}(DataType);\nDictionary[Symbol.toStringTag] = function (proto) {\n  proto.id = null;\n  proto.indices = null;\n  proto.isOrdered = null;\n  proto.dictionary = null;\n  return proto[Symbol.toStringTag] = 'Dictionary';\n}(Dictionary.prototype);\n/** @ignore */\nexport function strideForType(type) {\n  var t = type;\n  switch (type.typeId) {\n    case Type.Decimal:\n      return 4;\n    case Type.Timestamp:\n      return 2;\n    case Type.Date:\n      return 1 + t.unit;\n    case Type.Interval:\n      return 1 + t.unit;\n    case Type.Int:\n      return 1 + +(t.bitWidth > 32);\n    case Type.Time:\n      return 1 + +(t.bitWidth > 32);\n    case Type.FixedSizeList:\n      return t.listSize;\n    case Type.FixedSizeBinary:\n      return t.byteWidth;\n    default:\n      return 1;\n  }\n}","map":{"version":3,"names":["instance","comparer","Type","Precision","UnionMode","DateUnit","TimeUnit","IntervalUnit","DataType","_classCallCheck","_createClass","key","get","NONE","value","compareTo","other","visit","isNull","x","typeId","Null","isInt","Int","isFloat","Float","isBinary","Binary","isUtf8","Utf8","isBool","Bool","isDecimal","Decimal","isDate","Date","isTime","Time","isTimestamp","Timestamp","isInterval","Interval","isList","List","isStruct","Struct","isUnion","Union","isFixedSizeBinary","FixedSizeBinary","isFixedSizeList","FixedSizeList","isMap","Map","isDictionary","Dictionary","Symbol","toStringTag","proto","children","ArrayType","Array","prototype","_DataType","_inherits","_super","_createSuper","apply","arguments","toString","Int_","_DataType2","_super2","isSigned","bitWidth","_this","call","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Error","concat","Int8","_Int_","_super3","Int16","_Int_2","_super4","Int32","_Int_3","_super5","Int64","_Int_4","_super6","Uint8","_Int_5","_super7","Uint16","_Int_6","_super8","Uint32","_Int_7","_super9","Uint64","_Int_8","_super10","Object","defineProperty","_DataType3","_super11","precision","_this2","HALF","SINGLE","Float32Array","DOUBLE","Float64Array","Float16","_Float","_super12","Float32","_Float2","_super13","Float64","_Float3","_super14","_DataType4","_super15","_DataType5","_super16","_DataType6","_super17","_DataType7","_super18","scale","_this3","Date_","_DataType8","_super19","unit","_this4","DateDay","_Date_","_super20","DAY","DateMillisecond","_Date_2","_super21","MILLISECOND","Time_","_DataType9","_super22","_this5","TimeSecond","_Time_","_super23","SECOND","TimeMillisecond","_Time_2","_super24","TimeMicrosecond","_Time_3","_super25","MICROSECOND","TimeNanosecond","_Time_4","_super26","NANOSECOND","Timestamp_","_DataType10","_super27","timezone","_this6","TimestampSecond","_Timestamp_","_super28","TimestampMillisecond","_Timestamp_2","_super29","TimestampMicrosecond","_Timestamp_3","_super30","TimestampNanosecond","_Timestamp_4","_super31","Interval_","_DataType11","_super32","_this7","IntervalDayTime","_Interval_","_super33","DAY_TIME","IntervalYearMonth","_Interval_2","_super34","YEAR_MONTH","_DataType12","_super35","child","_this8","valueType","type","_DataType13","_super36","_this9","map","f","name","join","Union_","_DataType14","_super37","mode","typeIds","_this10","from","typeIdToChildIndex","reduce","idx","create","DenseUnion","_Union_","_super38","Dense","SparseUnion","_Union_2","_super39","Sparse","_DataType15","_super40","byteWidth","_this11","_DataType16","_super41","listSize","_this12","Map_","_DataType17","_super42","_this13","keysSorted","length","undefined","getId","atomicDictionaryId","_DataType18","_super43","dictionary","indices","id","isOrdered","_this14","low","strideForType","t"],"sources":["type.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}