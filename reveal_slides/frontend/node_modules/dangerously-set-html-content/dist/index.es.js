import React, { useEffect, useRef } from 'react';

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

function DangerouslySetHtmlContent(props) {
  var html = props.html,
      rest = objectWithoutProperties(props, ['html']);

  var divRef = useRef(null);

  useEffect(function () {
    if (!html) return;

    var slotHtml = document.createRange().createContextualFragment(html); // Create a 'tiny' document and parse the html string
    divRef.current.innerHTML = ''; // Clear the container
    divRef.current.appendChild(slotHtml); // Append the new content
  }, [html]);

  return React.createElement('div', _extends({}, rest, { ref: divRef }));
}

export default DangerouslySetHtmlContent;
//# sourceMappingURL=index.es.js.map
