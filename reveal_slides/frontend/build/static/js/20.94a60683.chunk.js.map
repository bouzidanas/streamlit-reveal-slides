{"version":3,"sources":["../node_modules/reveal.js-symbol-per-slide-progress/symbol-per-slide-progress.js"],"names":["VALID_POSITIONS","VALID_ALIGNS","RevealSymbolPerSlideProgress","window","SymbolPerSlideProgress","deck","position","align","symbolColor","listItemActiveColor","getStringOption","option","VALID_ELEMENTS","includes","toLowerCase","getColor","selectorValue","selector","document","querySelector","getComputedStyle","getPropertyValue","updateColors","options","arguments","length","undefined","symbolActiveColor","updateNavigation","ulist","ul","totalSlides","getTotalSlides","firstChild","removeChild","counter","li","createElement","className","getClassName","getSlidePastCount","classList","add","style","color","appendChild","id","init","reveal","getConfig","symbolperslideprogress","path","endsWith","url","type","callback","resource","head","src","rel","href","finish","call","onload","onreadystatechange","this","readyState","loadResource","div","addEventListener","initialize"],"mappings":"8IAAA,OAWA,IAAMA,EAAkB,CAAC,OAAQ,QAAS,UACpCC,EAAe,CAAC,WAAY,cAE5BC,EAA+BC,OAAOC,wBAA2B,WAGnE,IAAIC,EACAC,EACAC,EACAC,EACAC,EAsBJ,SAASC,EAAgBC,EAAQC,GAC7B,GAAsB,kBAAXD,GAAuBC,EAAeC,SAASF,EAAOG,eAC7D,OAAOH,EAAOG,aAEtB,CAGA,SAASC,EAASC,GACd,IAAIC,EAAWC,SAASC,cAAcH,GAGtC,OAFYb,OAAOiB,iBAAiBH,GAClBI,iBAAiB,QAEvC,CAGA,SAASC,IAA2B,IAAdC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7BhB,EAAce,EAAQf,aAAeO,EAAS,WAC9CN,EAAsBc,EAAQI,mBAAqBZ,EAAS,YAChE,CAEA,SAASa,EAAiBC,GAKtB,IAJA,IAAIC,EAAKD,GAASX,SAASC,cAAc,oBACrCY,EAAc1B,EAAK2B,iBAGhBF,EAAGG,YACNH,EAAGI,YAAYJ,EAAGG,YAGtB,IAAK,IAAIE,EAAU,EAAGA,GAAWJ,EAAaI,IAAW,CACrD,IAAIC,EAAKlB,SAASmB,cAAc,MAChCD,EAAGE,UAAYC,IAEXlC,EAAKmC,oBAAsB,IAAML,GACjCC,EAAGK,UAAUC,IAAI,UACjBN,EAAGO,MAAMC,MAAQnC,GAEjB2B,EAAGO,MAAMC,MAAQpC,EAGrBsB,EAAGe,YAAYT,EACnB,CACJ,CAEA,SAASG,IACL,GAAc,eAAVhC,EACA,OAAQD,GACJ,IAAK,QACD,MAAO,2CACX,IAAK,SACD,MAAO,4CAEX,QACI,MAAO,0CAInB,MAAO,yBACX,CAqDA,MAAO,CACHwC,GAAI,4BAEJC,KAAM,SAAUC,GAcZ,IAAIzB,GAbJlB,EAAO2C,GAaYC,YAAYC,wBAA0B,CAAC,EACtDC,EAAO5B,EAAQ4B,MAAQ,oCACtBA,EAAKC,SAAS,OACfD,GAAQ,KAGZ7C,EAAWI,EAAgBa,EAAQjB,SAAUN,IAAoB,OACjEO,EAAQG,EAAgBa,EAAQhB,MAAON,IAAiB,WACxDqB,EAAaC,GA3ErB,SAAsB8B,EAAKC,EAAMC,GAC7B,IACIC,EADAC,EAAOvC,SAASC,cAAc,QAGrB,WAATmC,IACAE,EAAWtC,SAASmB,cAAc,WACzBiB,KAAO,kBAChBE,EAASE,IAAML,GACC,eAATC,KACPE,EAAWtC,SAASmB,cAAc,SACzBsB,IAAM,aACfH,EAASI,KAAOP,GAIpB,IAAIQ,EAAS,WACe,oBAAbN,IACPA,EAASO,OACTP,EAAW,KAEnB,EAEAC,EAASO,OAASF,EAGlBL,EAASQ,mBAAqB,WACF,WAApBC,KAAKC,YACLL,GAER,EAGAJ,EAAKZ,YAAYW,EACrB,CA4CQW,CAAahB,EAAO,gCAAiC,cA9J7D,WACI,IAAIH,EAAS9B,SAASC,cAAc,WAEhCiD,EAAMlD,SAASmB,cAAc,OACjC+B,EAAI9B,UAAY,cAAgBhC,EAEhC,IAAIwB,EAAKZ,SAASmB,cAAc,MAChCP,EAAGQ,UAAY,kBAEfV,EAAiBE,GAEjBzB,EAAKgE,iBAAiB,gBAAgB,WAClCzC,EAAiBE,EACrB,IAEAsC,EAAIvB,YAAYf,GAChBkB,EAAOH,YAAYuB,EACvB,CA+IQE,EACJ,EAEAhD,aAAcA,EACdM,iBAAkBA,EAE1B,CA/KuE,GAiLxD1B,W","file":"static/js/20.94a60683.chunk.js","sourcesContent":["/**\r\n * reveal.js symbol per slide progress plugin\r\n *\r\n * A plugin which shows every slide as single symbol and the symbol of the current active slide in a different color.\r\n *\r\n * Demo https://naamor.github.io/reveal.js-symbol-per-slide-progress/\r\n *\r\n * MIT License\r\n * Copyright (c) 2018 Roman Stocker\r\n */\r\n\r\nconst VALID_POSITIONS = [\"left\", \"right\", \"center\"];\r\nconst VALID_ALIGNS = [\"vertical\", \"horizontal\"];\r\n\r\nconst RevealSymbolPerSlideProgress = window.SymbolPerSlideProgress || (function () {\r\n    \r\n    // The reveal.js instance this plugin is attached to\r\n    let deck;\r\n    let position;\r\n    let align;\r\n    let symbolColor;\r\n    let listItemActiveColor;\r\n\r\n    function initialize() {\r\n        var reveal = document.querySelector(\".reveal\");\r\n\r\n        var div = document.createElement(\"div\");\r\n        div.className = \"navigation \" + position;\r\n\r\n        var ul = document.createElement(\"ul\");\r\n        ul.className = \"navigation-list\";\r\n\r\n        updateNavigation(ul);\r\n\r\n        deck.addEventListener(\"slidechanged\", function () {\r\n            updateNavigation(ul);\r\n        });\r\n\r\n        div.appendChild(ul);\r\n        reveal.appendChild(div);\r\n    }\r\n\r\n    // Check input if it is valid and return it\r\n    function getStringOption(option, VALID_ELEMENTS) {\r\n        if (typeof option === \"string\" && VALID_ELEMENTS.includes(option.toLowerCase())) {\r\n            return option.toLowerCase();\r\n        }\r\n    }\r\n\r\n    // Get a color of the theme\r\n    function getColor(selectorValue) {\r\n        var selector = document.querySelector(selectorValue),\r\n            style = window.getComputedStyle(selector),\r\n            color = style.getPropertyValue(\"color\");\r\n        return color;\r\n    }\r\n\r\n    // Update colors\r\n    function updateColors(options = {}) {\r\n        symbolColor = options.symbolColor || getColor(\".reveal\");\r\n        listItemActiveColor = options.symbolActiveColor || getColor(\".controls\");\r\n    }\r\n\r\n    function updateNavigation(ulist) {\r\n        var ul = ulist || document.querySelector(\".navigation-list\")\r\n        var totalSlides = deck.getTotalSlides();\r\n\r\n        // Reset all child element\r\n        while (ul.firstChild) {\r\n            ul.removeChild(ul.firstChild);\r\n        }\r\n\r\n        for (let counter = 1; counter <= totalSlides; counter++) {\r\n            var li = document.createElement(\"li\");\r\n            li.className = getClassName();\r\n\r\n            if (deck.getSlidePastCount() + 1 === counter) {\r\n                li.classList.add(\"active\");\r\n                li.style.color = listItemActiveColor;\r\n            } else {\r\n                li.style.color = symbolColor;\r\n            }\r\n\r\n            ul.appendChild(li);\r\n        }\r\n    };\r\n\r\n    function getClassName() {\r\n        if (align === \"horizontal\") {\r\n            switch (position) {\r\n                case \"right\":\r\n                    return \"navigation-list-element horizontal-right\";\r\n                case \"center\":\r\n                    return \"navigation-list-element horizontal-center\";\r\n                case \"left\":\r\n                default:\r\n                    return \"navigation-list-element horizontal-left\";\r\n            }\r\n        }\r\n\r\n        return \"navigation-list-element\";\r\n    }\r\n\r\n    // Modified from math plugin\r\n    function loadResource(url, type, callback) {\r\n        var head = document.querySelector(\"head\");\r\n        var resource;\r\n\r\n        if (type === \"script\") {\r\n            resource = document.createElement(\"script\");\r\n            resource.type = \"text/javascript\";\r\n            resource.src = url;\r\n        } else if (type === \"stylesheet\") {\r\n            resource = document.createElement(\"link\");\r\n            resource.rel = \"stylesheet\";\r\n            resource.href = url;\r\n        }\r\n\r\n        // Wrapper for callback to make sure it only fires once\r\n        var finish = function () {\r\n            if (typeof callback === \"function\") {\r\n                callback.call();\r\n                callback = null;\r\n            }\r\n        };\r\n\r\n        resource.onload = finish;\r\n\r\n        // IE\r\n        resource.onreadystatechange = function () {\r\n            if (this.readyState === \"loaded\") {\r\n                finish();\r\n            }\r\n        };\r\n\r\n        // Normal browsers\r\n        head.appendChild(resource);\r\n    }\r\n\r\n    function scriptPath() {\r\n        // obtain plugin path from the script element\r\n        var path;\r\n        if (document.currentScript) {\r\n            path = document.currentScript.src.slice(0, -17);\r\n        } else {\r\n            var sel = document.querySelector('script[src$=\"symbol-per-slide-progress.js\"]');\r\n            if (sel) {\r\n                path = sel.src.slice(0, -17);\r\n            }\r\n        }\r\n\r\n        return path;\r\n    }\r\n\r\n    return {\r\n        id: \"symbol-per-slide-progress\",\r\n\r\n        init: function (reveal) {\r\n            deck = reveal;\r\n\r\n            // var config = reveal.getConfig().symbolPerSlideProgress || {};\r\n            // position = getStringOption(config.position, VALID_POSITIONS) || \"left\";\r\n            // align = getStringOption(config.align, VALID_ALIGNS) || \"vertical\";\r\n            // symbolColor = config.symbolColor || getColor(\".reveal .slides section .slide-number\");\r\n            // listItemActiveColor = config.listItemActiveColor || getColor(\".reveal .slides section .slide-number\");\r\n\r\n            // loadResource(scriptPath() + \"symbol-per-slide-progress.css\", \"stylesheet\", function () {\r\n            //     initialize();\r\n            // });\r\n\r\n             // Set all option defaults\r\n            var options = deck.getConfig().symbolperslideprogress || {};\r\n            var path = options.path || \"plugin/symbol-per-slide-progress/\";\r\n            if (!path.endsWith('/')) {\r\n                path += '/';\r\n            }\r\n\r\n            position = getStringOption(options.position, VALID_POSITIONS) || \"left\";\r\n            align = getStringOption(options.align, VALID_ALIGNS) || \"vertical\";\r\n            updateColors(options);\r\n\r\n            loadResource(path + \"symbol-per-slide-progress.css\", \"stylesheet\");\r\n\r\n            initialize();\r\n        },\r\n\r\n        updateColors: updateColors,\r\n        updateNavigation: updateNavigation\r\n    }\r\n})();\r\n\r\nexport default RevealSymbolPerSlideProgress;"],"sourceRoot":""}